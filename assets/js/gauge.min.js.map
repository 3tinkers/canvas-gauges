{"version":3,"sources":["gauge.min.js"],"names":["ns","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","vendorize","prop","window","global","vendors","s","capitalized","charAt","toUpperCase","substr","vendorProp","step","time","draw","start","rule","duration","end","anim","progress","percent","animationTransformed","isFinite","isNaN","frame","requestAnimationFrame","inProgress","Collection","apply","this","arguments","verifyError","err","DOMException","result","prepareTicks","options","majorTicks","push","drawings","formatMajorTickNumber","minValue","maxValue","tickSide","roundRect","context","x","y","w","h","r","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","padValue","val","dec","valueDec","int","valueInt","strVal","n","parseFloat","Math","abs","toFixed","toString","split","round","num","right","hasDec","majorTicksDec","majorTicksInt","indexOf","join","replace","radians","degrees","PI","radialPoint","radius","angle","sin","cos","linearGradient","colorFrom","colorTo","isVertical","undefined","grad","createLinearGradient","addColorStop","drawShadow","shadowDrawn","restore","save","borderShadowWidth","shadowBlur","shadowColor","colorBorderShadow","drawNeedleShadow","needleShadow","shadowOffsetX","shadowOffsetY","colorNeedleShadowDown","font","target","baseSize","reset","strokeStyle","lineWidth","drawValueTextShadow","offset","blur","valueTextShadow","colorValueTextShadow","drawValueBox","max","valueBox","addLength","maxValueWidth","repeat","String","parseInt","concat","map","text","valueText","tunit","runit","tw","measureText","Number","width","th","fontValueSize","sw","valueBoxStroke","bmax","bw","bh","br","valueBoxBorderRadius","obw","valueBoxWidth","bx","by","gy","rect","grd","createRadialGradient","colorValueBoxRect","colorValueBoxRectEnd","stroke","colorValueBoxShadow","colorValueBoxBackground","fillStyle","fill","colorValueText","textAlign","textBaseline","fillText","normalizedValue","min","dt","normal","indented","drawRadialBorder","arc","maxRadialRadius","pxRatio","SmartCanvas","pixelRatio","maxRadius","borderOuterWidth","borderMiddleWidth","borderInnerWidth","drawRadialPlate","d0","r0","r1","r2","r3","colorBorderOuter","colorBorderOuterEnd","colorBorderMiddle","colorBorderMiddleEnd","colorBorderInner","colorBorderInnerEnd","colorPlateEnd","colorPlate","drawRadialHighlights","hlWidth","highlightsWidth","radialTicksRadius","highlights","vd","ticksAngle","hlt","rotate","HPI","startAngle","to","color","drawRadialMinorTicks","range","delta","minTicks","minorTicks","ratio","colorMinorTicks","colorStrokeTicks","exactTicks","closeStrokedPath","unit","barWidth","barStrokeWidth","drawRadialMajorTicks","colors","colorMajorTicks","radialNextAngle","strokeTicks","drawRadialNumbers","points","isAnimated","animationTarget","colorNumbers","plateValueAngle","textWidth","textHeight","fontNumbersSize","textRadius","sqrt","point","numbersMargin","drawRadialTitle","title","colorTitle","drawRadialUnits","units","colorUnits","drawRadialNeedle","needle","needleCircleSize","rIn","needleEnd","rStart","needleStart","pad1","needleWidth","pad2","isFixed","colorNeedle","colorNeedleEnd","needleType","colorNeedleShadowUp","needleCircleOuter","colorNeedleCircleOuter","colorNeedleCircleOuterEnd","needleCircleInner","colorNeedleCircleInner","colorNeedleCircleInnerEnd","drawRadialValueBox","drawRadialProgressBar","rMax","rMin","half","sa","ea","colorBarStroke","colorBar","barShadow","clip","colorBarShadow","barProgress","colorBarProgress","displayValue","gauge","animatedValue","drawRectangle","colorStart","colorEnd","drawLinearBorder","drawLinearPlate","borderRadius","w1","w2","w3","w4","h1","h2","h3","h4","x2","x3","x4","y2","y3","y4","aliasingOffset","barDimensions","hasTitle","hasUnits","hasValue","titleMargin","unitsMargin","valueMargin","strokeWidth","barBeginCircle","barLength","barMargin","x0","y0","dx","hasLeft","hasRight","ticksWidth","dy","barOffset","ticksLength","X","Y","baseX","baseY","ticksPadding","drawLinearBarShape","type","_barDimensions","fullBarLength","direction","alpha","asin","cosAlpha","sinAlpha","x1","y1","cutRadius","rx","ry","colorBarEnd","colorBarProgressEnd","drawLinearBar","hasTicksBar","notWhich","needleSide","numberSide","drawLinearBarProgress","drawLinearBarHighlights","_context$barDimension","tickOffset","interval","eX","eH","eY","hLeft","hRight","entry","eStart","eW","drawLinearTick","drawLinearTicks","ticks","minVal","maxVal","lineLength","_context$barDimension2","tickX","tickY","tickLen","tickLeft","tickRight","drawLinearMajorTicks","_drawings$prepareTick","_drawings$prepareTick2","_slicedToArray","valuePerNonExactTick","tick","_context$barDimension3","rightTicks","leftTicks","sX","sY","drawLinearTickStroke","drawLinearMinorTicks","_drawings$prepareTick3","_drawings$prepareTick4","ticksWidthMinor","drawLinearMajorTicksNumbers","_context$barDimension4","tickValues","numLeft","numRight","textX","textY","numberOffset","textMargin","drawLinearTitle","_context$barDimension5","fontTitleSize","drawLinearUnits","_context$barDimension6","fontUnitsSize","drawLinearBarNeedle","_context$barDimension7","position","tickWidth","baseLength","needleLength","toLowerCase","drawLinearArrowNeedle","drawLinearLineNeedle","barStart","nLeft","nRight","needleStyle","isRight","peakLength","bodyLength","halfWidth","drawLinearValueBox","boxWidth","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","_set","set","setter","_createClass","defineProperties","props","descriptor","defineProperty","key","protoProps","staticProps","assign","firstSource","nextSource","keysArray","keys","nextIndex","len","nextKey","searchElement","fromIndex","k","O","Infinity","relativeStart","relativeEnd","final","EventEmitter","_events","addListener","on","removeListener","off","event","_len","args","_key","_len2","handlers","_key2","_loop","handler","wrapper","_handler","index","splice","callback","setTimeout","Date","getTime","rules","linear","p","quad","pow","dequad","quint","dequint","cycle","acos","decycle","bounce","debounce","a","b","elastic","delastic","Animation","_this","cancel","performance","now","cancelAnimationFrame","id","DomObserver","element","toDashed","Type","mutationsObserved","isObservable","MutationObserver","GAUGES_NO_AUTO_INIT","domReady","traverse","bind","node","tagName","getAttribute","elements","document","getElementsByTagName","process","observe","body","childList","subtree","attributes","characterData","attributeOldValue","characterDataOldValue","records","record","attributeName","isValidNode","oldValue","addedNodes","ii","ss","_this2","JSON","parse","stringify","hasOwnProperty","toAttributeName","attributeValue","renderTo","observer","forEach","attr","disconnect","destroy","_prop","part","_options","update","test","e","camelCase","str","dashed","readyState","addEventListener","attachEvent","canvas","height","collection","init","style","elementClone","cloneNode","getContext","contextClone","drawWidth","drawHeight","drawX","drawY","minSide","initialized","translate","clearRect","onRedraw","scale","redraw","devicePixelRatio","matchMedia","GenericOptions","animateOnInit","borders","animation","animationDuration","animationRule","fontNumbers","fontTitle","fontUnits","fontValue","fontNumbersStyle","fontTitleStyle","fontUnitsStyle","fontValueStyle","fontNumbersWeight","fontTitleWeight","fontUnitsWeight","fontValueWeight","getElementById","version","gauges","BaseGauge","_EventEmitter","_this3","className","name","HTMLCanvasElement","parentNode","offsetWidth","offsetHeight","_value","configure","emit","_this4","ensureValue","fromValue","animate","newValue","toCamelCase","defaultRadialGaugeOptions","useMinPath","RadialGauge","_BaseGauge","_ref","commit","drawImage","_context","initialize","defaultLinearGaugeOptions","LinearGauge","_BaseGauge2","_ref2","drawBox","module","exports"],"mappings":"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","file":"gauge.min.js","sourcesContent":["/*!\n * The MIT License (MIT)\n * \n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @version 2.1.3\n */\n(function(ns) {'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _set = function set(object, property, value, receiver) { var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent !== null) { set(parent, property, value, receiver); } } else if (\"value\" in desc && desc.writable) { desc.value = value; } else { var setter = desc.set; if (setter !== undefined) { setter.call(receiver, value); } } return value; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @external {Object.assign} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n/* istanbul ignore next */\nif (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function value(target, firstSource) {\n            'use strict';\n\n            if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert first argument to object');\n            }\n\n            var to = Object(target);\n            var i = 1;\n\n            for (; i < arguments.length; i++) {\n                var nextSource = arguments[i];\n\n                if (nextSource === undefined || nextSource === null) {\n                    continue;\n                }\n\n                var keysArray = Object.keys(Object(nextSource));\n                var nextIndex = 0,\n                    len = keysArray.length;\n\n                for (; nextIndex < len; nextIndex++) {\n                    var nextKey = keysArray[nextIndex];\n                    var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n                    if (desc !== undefined && desc.enumerable) {\n                        to[nextKey] = nextSource[nextKey];\n                    }\n                }\n            }\n\n            return to;\n        }\n    });\n}\n\n/**\n * @external {Array.indexOf} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf\n */\n/* istanbul ignore next */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\n        var k;\n\n        if (this === null) {\n            throw new TypeError('\"this\" is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n\n        if (len === 0) {\n            return -1;\n        }\n\n        var n = +fromIndex || 0;\n\n        if (Math.abs(n) === Infinity) {\n            n = 0;\n        }\n\n        if (n >= len) {\n            return -1;\n        }\n\n        k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n\n        while (k < len) {\n            if (k in O && O[k] === searchElement) {\n                return k;\n            }\n\n            k++;\n        }\n\n        return -1;\n    };\n}\n\n/**\n * @external {Array.fill} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/fill\n */\n/* istanbul ignore next */\nif (!Array.prototype.fill) {\n    Array.prototype.fill = function (value) {\n        if (this === null) {\n            throw new TypeError('this is null or not defined');\n        }\n\n        var O = Object(this);\n        var len = O.length >>> 0;\n        var start = arguments[1];\n        var relativeStart = start >> 0;\n        var k = relativeStart < 0 ? Math.max(len + relativeStart, 0) : Math.min(relativeStart, len);\n        var end = arguments[2];\n        var relativeEnd = end === undefined ? len : end >> 0;\n        var final = relativeEnd < 0 ? Math.max(len + relativeEnd, 0) : Math.min(relativeEnd, len);\n        while (k < final) {\n            O[k] = value;\n            k++;\n        }\n\n        return O;\n    };\n}\n\n/**\n * mocking window\n */\nif (typeof window === 'undefined') {\n    window = typeof global === 'undefined' ? {} : global;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * Look-ups for a proper vendor-specific property and returns its value\n *\n * @example\n * var requestAnimationFrame = vendorize('requestAnimationFrame');\n * // it will refer properly to:\n * //  - window.requestAnimationFrame by default or to\n * //  - window.webkitRequestAnimationFrame or to\n * //  - window.mozRequestAnimationFrame or to\n * //  - window.msRequestAnimationFrame or to\n * //  - window.oRequestAnimationFrame\n * // depending on the current browser vendor\n *\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * @param {string} prop\n * @param {HTMLElement|Window|object} [from] - default is window\n * @returns {*}\n */\nfunction vendorize(prop, from) {\n    /* istanbul ignore else: no reason to cover */\n    if (!from) {\n        from = typeof window === 'undefined' ? global : window;\n    }\n\n    if (typeof from[prop] !== 'undefined') {\n        return from[prop];\n    }\n\n    var vendors = ['webkit', 'moz', 'ms', 'o'];\n    var i = 0;\n    var s = vendors.length;\n    var capitalized = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n    for (; i < s; i++) {\n        var vendorProp = from[vendors[i] + capitalized];\n\n        /* istanbul ignore if: requires very complex environment to test (specific browser version) */\n        if (typeof vendorProp !== 'undefined') {\n            return vendorProp;\n        }\n    }\n\n    return null;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Class EventEmitter - base event manager\n */\n\nvar EventEmitter = function () {\n    /**\n     * @constructor\n     */\n    function EventEmitter() {\n        _classCallCheck(this, EventEmitter);\n\n        this._events = {};\n\n        this.addListener = this.on;\n        this.removeListener = this.off;\n    }\n\n    /**\n     * Returns all event listeners\n     *\n     * @return {object}\n     */\n\n\n    _createClass(EventEmitter, [{\n        key: 'emit',\n\n\n        /**\n         * Emits given event bypassing to each registered handler given args\n         *\n         * @param {string} event\n         * @param {...*} args\n         */\n        value: function emit(event) {\n            if (this._events[event]) {\n                var i = 0;\n                var s = this._events[event].length;\n\n                for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    args[_key - 1] = arguments[_key];\n                }\n\n                for (; i < s; i++) {\n                    this._events[event][i] && this._events[event][i].apply(this, args);\n                }\n            }\n        }\n\n        /**\n         * Registers given handler for given event to be called only once when\n         * event is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'once',\n        value: function once(event) {\n            for (var _len2 = arguments.length, handlers = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n                handlers[_key2 - 1] = arguments[_key2];\n            }\n\n            var i = 0;\n            var s = handlers.length;\n            var self = this;\n\n            var _loop = function _loop() {\n                var handler = handlers[i];\n                var wrapper = function wrapper() {\n                    self.off(event, wrapper);\n                    handler.apply(self, arguments);\n                };\n\n                handlers[i] = wrapper;\n            };\n\n            for (; i < s; i++) {\n                _loop();\n            }\n\n            this.on.apply(this, [event].concat(handlers));\n        }\n\n        /**\n         * Registers given handlers for a given events to be called each time event\n         * is emitted\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'on',\n        value: function on(event) {\n            if (!this._events[event]) {\n                this._events[event] = [];\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                this._events[event].push(arguments.length <= i + 1 ? undefined : arguments[i + 1]);\n            }\n        }\n\n        /**\n         * Un-registers previously registered event handlers\n         *\n         * @param {string} event\n         * @param {...function} handlers\n         */\n\n    }, {\n        key: 'off',\n        value: function off(event) {\n            if (!this._events[event]) {\n                return;\n            }\n\n            var i = 0;\n            var s = arguments.length <= 1 ? 0 : arguments.length - 1;\n\n            for (; i < s; i++) {\n                var _handler = arguments.length <= i + 1 ? undefined : arguments[i + 1];\n                var index = void 0;\n\n                while (~(index = this._events[event].indexOf(_handler))) {\n                    this._events[event].splice(index, 1);\n                }\n            }\n        }\n\n        /**\n         * Removes all listeners for a given event\n         *\n         * @param {string} event\n         */\n\n    }, {\n        key: 'removeAllListeners',\n        value: function removeAllListeners(event) {\n            delete this._events[event];\n        }\n    }, {\n        key: 'listeners',\n        get: function get() {\n            return this._events;\n        }\n    }]);\n\n    return EventEmitter;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/* jshint -W079 */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/* istanbul ignore next */\n/**\n * @type {function(callback: function(time: number): number, element?: HTMLElement)}\n * @access private\n */\n\n\nvar requestAnimationFrame = vendorize('requestAnimationFrame') || function (callback) {\n    return setTimeout(function () {\n        return callback(new Date().getTime());\n    }, 1000 / 60);\n};\n\n/**\n * Generic AnimationRule function interface\n *\n * @typedef {function(percent: number): number} AnimationRule\n */\n\n/**\n * Callback for animation step draw event.\n * It will be called each time animation step is executed, bypassing\n * as first argument a percent of animation completeness. It is expected\n * that this callback will do an actual work of animating an elements or\n * whatever, as far as animation engine is just calculating and executing\n * animation steps without any knowledge about things under animation.\n *\n * @typedef {function(percent: number): *} DrawEventCallback\n */\n\n/**\n * Callback for animation complete event.\n * It is called once each animation is complete.\n *\n * @typedef {function(): *} EndEventCallback\n */\n\n/**\n * Predefined known animation rules.\n * It's a simple collection of math for some most used animations.\n *\n * @typedef {{linear: AnimationRule, quad: AnimationRule, dequad: AnimationRule, quint: AnimationRule, dequint: AnimationRule, cycle: AnimationRule, decycle: AnimationRule, bounce: AnimationRule, debounce: AnimationRule, elastic: AnimationRule, delastic: AnimationRule}} AnimationRules\n */\n\n/* istanbul ignore next: no reason covering this */\nvar rules = {\n    linear: function linear(p) {\n        return p;\n    },\n    quad: function quad(p) {\n        return Math.pow(p, 2);\n    },\n    dequad: function dequad(p) {\n        return 1 - rules.quad(1 - p);\n    },\n    quint: function quint(p) {\n        return Math.pow(p, 5);\n    },\n    dequint: function dequint(p) {\n        return 1 - Math.pow(1 - p, 5);\n    },\n    cycle: function cycle(p) {\n        return 1 - Math.sin(Math.acos(p));\n    },\n    decycle: function decycle(p) {\n        return Math.sin(Math.acos(1 - p));\n    },\n    bounce: function bounce(p) {\n        return 1 - rules.debounce(1 - p);\n    },\n    debounce: function debounce(p) {\n        var a = 0,\n            b = 1;\n        for (; 1; a += b, b /= 2) {\n            if (p >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * p) / 4, 2) + Math.pow(b, 2);\n            }\n        }\n    },\n    elastic: function elastic(p) {\n        return 1 - rules.delastic(1 - p);\n    },\n    delastic: function delastic(p) {\n        var x = 1.5;\n        return Math.pow(2, 10 * (p - 1)) * Math.cos(20 * Math.PI * x / 3 * p);\n    }\n};\n\n/* istanbul ignore next: private, not testable */\n/**\n * Evaluates animation step and decides if the next step required or\n * stops animation calling a proper events.\n *\n * @access private\n * @param {number} time\n * @param {DrawEventCallback} draw\n * @param {number} start\n * @param {AnimationRule} rule\n * @param {number} duration\n * @param {EndEventCallback} end\n * @param {Animation} anim\n */\nfunction step(time, draw, start, rule, duration, end, anim) {\n    if (typeof rule !== 'function') {\n        throw new TypeError('Invalid animation rule:', rule);\n    }\n\n    var progress = time - start;\n    var percent = progress / duration;\n    var animationTransformed = 0;\n\n    if (percent > 1) {\n        percent = 1;\n    }\n\n    if (percent !== 1) {\n        animationTransformed = rule(percent);\n\n        // make sure we have correct number after applying animation\n        // transformation\n        if (isFinite(animationTransformed) && !isNaN(animationTransformed)) {\n            percent = animationTransformed;\n        }\n    }\n\n    draw && draw(percent);\n\n    if (progress < duration) {\n        anim.frame = requestAnimationFrame(function (time) {\n            return step(time, draw, start, rule, duration, end, anim);\n        });\n    } else {\n        end && end();\n        anim.inProgress = false;\n    }\n}\n\n/**\n * Animation engine API for JavaScript-based animations.\n * This is simply an animation core framework which simplifies creation\n * of various animations for generic purposes.\n *\n * @example\n * // create 'linear' animation engine, 500ms duration\n * let linear = new Animation('linear', 500);\n *\n * // create 'elastic' animation engine\n * let elastic = new Animation('elastic');\n *\n * // define animation behavior\n * let bounced = new Animation('bounce', 500, percent => {\n *     let value = parseInt(percent * 100, 10);\n *\n *     $('div.bounced').css({\n *         width: value + '%',\n *         height: value + '%'\n *     });\n * });\n *\n * // execute animation\n * bounced.animate();\n *\n * // execute animation and handle when its finished\n * bounced.animate(null, () => {\n *    console.log('Animation finished!');\n * });\n */\n\nvar Animation = function () {\n\n    /**\n     * @constructor\n     * @param {string|AnimationRule} rule\n     * @param {number} duration\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n    function Animation() {\n        var rule = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'linear';\n        var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 250;\n        var draw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n        var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n        _classCallCheck(this, Animation);\n\n        /**\n         * Overall animation duration in milliseconds.\n         * By default is equal to 250 ms.\n         *\n         * @type {number}\n         */\n        this.duration = duration;\n\n        /**\n         * Animation rule. By default is linear animation.\n         * Animation rule is a subject to animation rules, which are\n         * a simple object containing math-based methods for calculating\n         * animation steps.\n         *\n         * @type {string|AnimationRule}\n         */\n        this.rule = rule;\n\n        /**\n         * Callback function for the animation step draw event.\n         *\n         * @type {DrawEventCallback}\n         */\n        this.draw = draw;\n\n        /**\n         * Callback for the animation complete event.\n         *\n         * @type {EndEventCallback}\n         */\n        this.end = end;\n\n        if (typeof this.draw !== 'function') {\n            throw new TypeError('Invalid animation draw callback:', draw);\n        }\n\n        if (typeof this.end !== 'function') {\n            throw new TypeError('Invalid animation end callback:', end);\n        }\n    }\n\n    /* istanbul ignore next: non-testable */\n    /**\n     * Performs animation calling each animation step draw callback and\n     * end callback at the end of animation. Callbacks are optional to this\n     * method call. If them are not bypassed will be used that ones which\n     * was pre-set on constructing an Animation object or pre-set after\n     * construction.\n     *\n     * @example\n     * function draw(percent) {\n     *     $('.my-animated-divs').css({\n     *         width: parseInt(percent * 100, 10) + '%'\n     *     });\n     * }\n     * function done() {\n     *     console.log('Animation complete!');\n     * }\n     *\n     * // Define 'draw' and 'end' callbacks on construction\n     * var animation = new Animation('cycle', 500, draw, done);\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks after construction\n     * var animation = new Animation('cycle', 500);\n     * animation.draw = draw;\n     * animation.end = done;\n     * animation.animate();\n     *\n     * // Define 'draw' and 'end' callbacks at animation\n     * var animation = new Animation('cycle', 500);\n     * animation.animate(draw, done);\n     *\n     * @param {DrawEventCallback} [draw]\n     * @param {EndEventCallback} [end]\n     */\n\n\n    _createClass(Animation, [{\n        key: 'animate',\n        value: function animate(draw, end) {\n            var _this = this;\n\n            this.frame && this.cancel();\n\n            // noinspection JSUnresolvedVariable\n            var start = window.performance && window.performance.now ? window.performance.now() : vendorize('animationStartTime') || Date.now();\n\n            draw = draw || this.draw;\n            end = end || this.end;\n\n            this.draw = draw;\n            this.end = end;\n\n            /**\n             * Current requested animation frame identifier\n             *\n             * @type {number}\n             */\n            this.frame = requestAnimationFrame(function (time) {\n                return step(time, draw, start, rules[_this.rule] || _this.rule, _this.duration, end, _this);\n            });\n        }\n\n        /**\n         * Cancels current animation if any\n         */\n\n    }, {\n        key: 'cancel',\n        value: function cancel() {\n            if (this.frame) {\n                var cancelAnimationFrame = vendorize('cancelAnimationFrame') ||\n                /* istanbul ignore next */\n                function (id) {};\n\n                cancelAnimationFrame(this.frame);\n                this.frame = null;\n            }\n        }\n\n        /**\n         * Destroys this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.cancel();\n            this.draw = null;\n            this.end = null;\n        }\n    }]);\n\n    return Animation;\n}();\n\n/**\n * Animation rules bound statically to Animation constructor.\n *\n * @type {AnimationRules}\n * @static\n */\n\n\nAnimation.rules = rules;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n/**\n * @typedef {{ constructor: function(options: GenericOptions): GaugeInterface, draw: function(): GaugeInterface, destroy: function, update: function(options: GenericOptions) }} GaugeInterface\n */\n/**\n * @typedef {{parse: function, stringify: function}} JSON\n * @external {JSON} https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON\n */\n/**\n * @ignore\n * @typedef {{MutationObserver: function}} ns\n */\n\n/**\n * DOM Observer.\n * It will observe DOM document for a configured element types and\n * instantiate associated Types for an existing or newly added DOM elements\n *\n * @example\n * class ProgressBar {\n *     constructor(options) {}\n *     draw() {}\n * }\n *\n * // It will observe DOM document for elements <div>\n * // having attribute 'data-type=\"progress\"'\n * // and instantiate for each new instance of ProgressBar\n *\n * new DomParser({color: 'red'}, 'div', 'progress', ProgressBar);\n *\n * // assume we could have HTML like this\n * // <div data-type=\"progress\" color=\"blue\"></div>\n * // in this case all matching attributes names for a given options will be\n * // parsed and bypassed to an instance from HTML attributes\n */\n\nvar DomObserver = function () {\n\n    /**\n     * @constructor\n     * @param {object} options\n     * @param {string} element\n     * @param {string} type\n     */\n    function DomObserver(options, element, type) {\n        _classCallCheck(this, DomObserver);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Default instantiation options for the given type\n         *\n         * @type {Object}\n         */\n        this.options = options;\n\n        /**\n         * Name of an element to lookup/observe\n         *\n         * @type {string}\n         */\n        this.element = element.toLowerCase();\n\n        /**\n         * data-type attribute value to lookup\n         *\n         * @type {string}\n         */\n        this.type = DomObserver.toDashed(type);\n\n        /**\n         * Actual type constructor to instantiate for each found element\n         *\n         * @type {Function}\n         */\n        this.Type = ns[type];\n\n        /**\n         * Signals if mutations observer for this type or not\n         *\n         * @type {boolean}\n         */\n        this.mutationsObserved = false;\n\n        /**\n         * Flag specifies whenever the browser supports observing\n         * of DOM tree mutations or not\n         *\n         * @type {boolean}\n         */\n        this.isObservable = !!window.MutationObserver;\n\n        /* istanbul ignore next: this should be tested with end-to-end tests */\n        if (!window.GAUGES_NO_AUTO_INIT) {\n            DomObserver.domReady(this.traverse.bind(this));\n        }\n    }\n\n    /**\n     * Checks if given node is valid node to process\n     *\n     * @param {Node|HTMLElement} node\n     * @returns {boolean}\n     */\n\n\n    _createClass(DomObserver, [{\n        key: 'isValidNode',\n        value: function isValidNode(node) {\n            //noinspection JSUnresolvedVariable\n            return !!(node.tagName && node.tagName.toLowerCase() === this.element && node.getAttribute('data-type') === this.type);\n        }\n\n        /**\n         * Traverse entire current DOM tree and process matching nodes.\n         * Usually it should be called only once on document initialization.\n         */\n\n    }, {\n        key: 'traverse',\n        value: function traverse() {\n            var elements = document.getElementsByTagName(this.element);\n            var i = 0,\n                s = elements.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                this.process(elements[i]);\n            }\n\n            if (this.isObservable && !this.mutationsObserved) {\n                new MutationObserver(this.observe.bind(this)).observe(document.body, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true,\n                    characterData: true,\n                    attributeOldValue: true,\n                    characterDataOldValue: true\n                });\n\n                this.mutationsObserved = true;\n            }\n        }\n\n        /**\n         * Observes given mutation records for an elements to process\n         *\n         * @param {MutationRecord[]} records\n         */\n\n    }, {\n        key: 'observe',\n        value: function observe(records) {\n            var i = 0;\n            var s = records.length;\n\n            /* istanbul ignore next: this should be tested with end-to-end tests */\n            for (; i < s; i++) {\n                var record = records[i];\n\n                if (record.type === 'attributes' && record.attributeName === 'data-type' && this.isValidNode(record.target) && record.oldValue !== this.type) // skip false-positive mutations\n                    {\n                        setTimeout(this.process.bind(this, record.target));\n                    } else if (record.addedNodes && record.addedNodes.length) {\n                    var ii = 0;\n                    var ss = record.addedNodes.length;\n\n                    for (; ii < ss; ii++) {\n                        setTimeout(this.process.bind(this, record.addedNodes[ii]));\n                    }\n                }\n            }\n        }\n\n        /**\n         * Parses given attribute value to a proper JavaScript value.\n         * For example it will parse some stringified value to a proper type\n         * value, e.g. 'true' => true, 'null' => null, '{\"prop\": 20}' => {prop: 20}\n         *\n         * @param {*} value\n         * @return {*}\n         */\n\n    }, {\n        key: 'process',\n\n\n        /**\n         * Processes a given node, instantiating a proper type constructor for it\n         *\n         * @param {Node|HTMLElement} node\n         * @returns {GaugeInterface|null}\n         */\n        value: function process(node) {\n            var _this2 = this;\n\n            if (!this.isValidNode(node)) return null;\n\n            var prop = void 0;\n            var options = JSON.parse(JSON.stringify(this.options));\n            var instance = null;\n\n            for (prop in options) {\n                /* istanbul ignore else: non-testable in most cases */\n                if (options.hasOwnProperty(prop)) {\n                    var attributeName = DomObserver.toAttributeName(prop);\n                    var attributeValue = DomObserver.parse(node.getAttribute(attributeName));\n\n                    if (attributeValue !== null && attributeValue !== undefined) {\n                        options[prop] = attributeValue;\n                    }\n                }\n            }\n\n            options.renderTo = node;\n            instance = new this.Type(options);\n            instance.draw && instance.draw();\n\n            if (!this.isObservable) return instance;\n\n            instance.observer = new MutationObserver(function (records) {\n                records.forEach(function (record) {\n                    if (record.type === 'attributes') {\n                        var attr = record.attributeName.toLowerCase();\n                        var type = node.getAttribute(attr).toLowerCase();\n\n                        if (attr === 'data-type' && type && type !== _this2.type) {\n                            instance.observer.disconnect();\n                            delete instance.observer;\n                            instance.destroy && instance.destroy();\n                        } else if (attr.substr(0, 5) === 'data-') {\n                            var _prop = attr.substr(5).split('-').map(function (part, i) {\n                                return !i ? part : part.charAt(0).toUpperCase() + part.substr(1);\n                            }).join('');\n                            var _options = {};\n\n                            _options[_prop] = DomObserver.parse(node.getAttribute(record.attributeName));\n\n                            instance.update && instance.update(_options);\n                        }\n                    }\n                });\n            });\n\n            //noinspection JSCheckFunctionSignatures\n            instance.observer.observe(node, { attributes: true });\n\n            return instance;\n        }\n\n        /**\n         * Transforms camelCase string to dashed string\n         *\n         * @static\n         * @param {string} camelCase\n         * @return {string}\n         */\n\n    }], [{\n        key: 'parse',\n        value: function parse(value) {\n            // parse boolean\n            if (value === 'true') return true;\n            if (value === 'false') return false;\n\n            // parse undefined\n            if (value === 'undefined') return undefined;\n\n            // parse null\n            if (value === 'null') return null;\n\n            // Comma-separated strings to array parsing.\n            // It won't match strings which contains non alphanumeric characters to\n            // prevent strings like 'rgba(0,0,0,0)' or JSON-like from being parsed.\n            // Typically it simply allows easily declare arrays as comma-separated\n            // numbers or plain strings. If something more complicated is\n            // required it can be declared using JSON format syntax\n            if (/^[-+#.\\w\\d\\s]+(?:,[-+#.\\w\\d\\s]*)+$/.test(value)) {\n                return value.split(',');\n            }\n\n            // parse JSON\n            try {\n                return JSON.parse(value);\n            } catch (e) {}\n\n            // plain value - no need to parse\n            return value;\n        }\n    }, {\n        key: 'toDashed',\n        value: function toDashed(camelCase) {\n            var arr = camelCase.split(/(?=[A-Z])/);\n            var i = 1;\n            var s = arr.length;\n            var str = arr[0].toLowerCase();\n\n            for (; i < s; i++) {\n                str += '-' + arr[i].toLowerCase();\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms dashed string to CamelCase representation\n         *\n         * @param {string} dashed\n         * @param {boolean} [capitalized]\n         * @return {string}\n         */\n\n    }, {\n        key: 'toCamelCase',\n        value: function toCamelCase(dashed) {\n            var capitalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            var arr = dashed.split(/-/);\n            var i = 0;\n            var s = arr.length;\n            var str = '';\n\n            for (; i < s; i++) {\n                if (!(i || capitalized)) {\n                    str += arr[i].toLowerCase();\n                } else {\n                    str += arr[i][0].toUpperCase() + arr[i].substr(1).toLowerCase();\n                }\n            }\n\n            return str;\n        }\n\n        /**\n         * Transforms camel case property name to dash separated attribute name\n         *\n         * @static\n         * @param {string} str\n         * @returns {string}\n         */\n\n    }, {\n        key: 'toAttributeName',\n        value: function toAttributeName(str) {\n            return 'data-' + DomObserver.toDashed(str);\n        }\n\n        /**\n         * Cross-browser DOM ready handler\n         *\n         * @static\n         * @param {Function} handler\n         */\n\n    }, {\n        key: 'domReady',\n        value: function domReady(handler) {\n            if (/comp|inter|loaded/.test((window.document || {}).readyState + '')) return handler();\n\n            if (window.addEventListener) window.addEventListener('DOMContentLoaded', handler, false);else if (window.attachEvent) window.attachEvent('onload', handler);\n        }\n    }]);\n\n    return DomObserver;\n}();\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n\n/**\n * Drawings on canvas using hidden canvas as a cache for better\n * performance drawings during canvas animations. SmartCanvas also\n * adopts a canvas to\n */\n\n\nvar SmartCanvas = function () {\n\n    /**\n     * @constructor\n     * @param {HTMLCanvasElement} canvas\n     * @param {number} [width]\n     * @param {number} [height]\n     */\n    function SmartCanvas(canvas, width, height) {\n        _classCallCheck(this, SmartCanvas);\n\n        SmartCanvas.collection.push(this);\n\n        /**\n         * Canvas base width\n         *\n         * @type {number}\n         */\n        this.width = width || 0;\n\n        /**\n         * Canvas base height\n         *\n         * @type {number}\n         */\n        this.height = height || 0;\n\n        /**\n         * Target drawings canvas element\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.element = canvas;\n\n        this.init();\n    }\n\n    /**\n     * Initializes canvases and contexts\n     */\n\n\n    _createClass(SmartCanvas, [{\n        key: 'init',\n        value: function init() {\n            var pixelRatio = SmartCanvas.pixelRatio;\n\n            this.element.width = this.width * pixelRatio;\n            this.element.height = this.height * pixelRatio;\n\n            this.element.style.width = this.width + 'px';\n            this.element.style.height = this.height + 'px';\n\n            /**\n             * Canvas caching element\n             *\n             * @type {HTMLCanvasElement|Node}\n             */\n            this.elementClone = this.element.cloneNode(true);\n\n            //noinspection JSUnresolvedVariable\n            /**\n             * Target drawings canvas element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.context = this.element.getContext('2d');\n\n            /**\n             * Canvas caching element 2D context\n             *\n             * @type {CanvasRenderingContext2D}\n             */\n            this.contextClone = this.elementClone.getContext('2d');\n\n            /**\n             * Actual drawings width\n             *\n             * @type {number}\n             */\n            this.drawWidth = this.element.width;\n\n            /**\n             * Actual drawings height\n             *\n             * @type {number}\n             */\n            this.drawHeight = this.element.height;\n\n            /**\n             * X-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawX = this.drawWidth / 2;\n\n            /**\n             * Y-coordinate of drawings zero point\n             *\n             * @type {number}\n             */\n            this.drawY = this.drawHeight / 2;\n\n            /**\n             * Minimal side length in pixels of the drawing\n             *\n             * @type {number}\n             */\n            this.minSide = this.drawX < this.drawY ? this.drawX : this.drawY;\n\n            this.elementClone.initialized = false;\n\n            this.contextClone.translate(this.drawX, this.drawY);\n            this.contextClone.save();\n\n            this.context.translate(this.drawX, this.drawY);\n            this.context.save();\n\n            this.context.max = this.contextClone.max = this.minSide;\n            this.context.maxRadius = this.contextClone.maxRadius = null;\n        }\n\n        /**\n         * Destroys this object, removing the references from memory\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = SmartCanvas.collection.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                SmartCanvas.collection.splice(index, 1);\n            }\n\n            this.context.clearRect(-this.drawX, -this.drawY, this.drawWidth, this.drawHeight);\n\n            // dereference all created elements\n            this.context.max = null;\n            delete this.context.max;\n\n            this.context.maxRadius = null;\n            delete this.context.maxRadius;\n\n            this.context = null;\n            this.contextClone = null;\n            this.elementClone = null;\n            this.element = null;\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function|null|undefined}\n             */\n            this.onRedraw = null;\n        }\n\n        /**\n         * Commits the drawings\n         */\n\n    }, {\n        key: 'commit',\n        value: function commit() {\n            var scale = SmartCanvas.pixelRatio;\n\n            if (scale !== 1) {\n                this.contextClone.scale(scale, scale);\n                this.contextClone.save();\n            }\n\n            return this;\n        }\n\n        /**\n         * Redraw this object\n         */\n\n    }, {\n        key: 'redraw',\n        value: function redraw() {\n            this.init();\n\n            /**\n             * On canvas redraw event callback\n             *\n             * @type {function(): *}\n             */\n            this.onRedraw && this.onRedraw();\n\n            return this;\n        }\n\n        /**\n         * Returns current device pixel ratio\n         *\n         * @returns {number}\n         */\n\n    }], [{\n        key: 'redraw',\n\n\n        /**\n         * Forces redraw all canvas in the current collection\n         */\n        value: function redraw() {\n            var i = 0;\n            var s = SmartCanvas.collection.length;\n\n            for (; i < s; i++) {\n                SmartCanvas.collection[i].redraw();\n            }\n        }\n    }, {\n        key: 'pixelRatio',\n        get: function get() {\n            /* istanbul ignore next */\n            //noinspection JSUnresolvedVariable\n            return window.devicePixelRatio || 1;\n        }\n    }]);\n\n    return SmartCanvas;\n}();\n\nSmartCanvas.collection = [];\n\n/* istanbul ignore next: very browser-specific testing required to cover */\n//noinspection JSUnresolvedVariable\nif (window.matchMedia) {\n    //noinspection JSUnresolvedFunction\n    window.matchMedia('screen and (min-resolution: 2dppx)').addListener(SmartCanvas.redraw);\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Describes rendering target element. Can be either string identifier of\n * the element or the element itself.\n *\n * @typedef {HTMLElement|string} RenderTarget\n */\n\n/**\n * Highlight area definition.\n * It describes highlight area starting from value to value using\n * color. Color can be describes with hex, rgb or rgba value.\n *\n * @typedef {{ from: number, to: number, color: string}} Highlight\n */\n\n/**\n * Shared generic gauges options\n *\n * @type {{renderTo: RenderTarget, width: number, height: number, minValue: number, maxValue: number, value: number, units: string|boolean, majorTicks: number[]|string[], exactTicks: boolean, minorTicks: number, strokeTicks: boolean, animatedValue: boolean, animateOnInit: boolean, title: string|boolean, borders: boolean, valueInt: number, valueDec: number, majorTicksInt: number, majorTicksDec: number, animation: boolean, animationDuration: number, animationRule: string|AnimationRule, colorPlate: string, colorPlateEnd: string, colorMajorTicks: string, colorMinorTicks: string, colorStrokeTicks: string, colorTitle: string, colorUnits: string, colorNumbers: string, colorNeedle: string, colorNeedleEnd: string, colorValueText: string, colorValueTextShadow: string, colorBorderShadow: string, colorBorderOuter: string, colorBorderOuterEnd: string, colorBorderMiddle: string, colorBorderMiddleEnd: string, colorBorderInner: string, colorBorderInnerEnd: string, colorValueBoxRect: string, colorValueBoxRectEnd: string, colorValueBoxBackground: string, colorValueBoxShadow: string, colorNeedleShadowUp: string, colorNeedleShadowDown: string, needle: boolean, needleShadow: boolean, needleType: string, needleStart: number, needleEnd: number, needleWidth: number, borderOuterWidth: number, borderMiddleWidth: number, borderInnerWidth: number, borderShadowWidth: number, valueBox: boolean, valueBoxWidth: number, valueBoxStroke: number, valueText: string, valueTextShadow: boolean, valueBoxBorderRadius: number, highlights: Highlight[], highlightsWidth: number, fontNumbers: string, fontTitle: string, fontUnits: string, fontValue: string, fontTitleSize: number, fontValueSize: number, fontUnitsSize: number, fontNumbersSize: number, fontNumbersStyle: string, fontTitleStyle: string, fontUnitsStyle: string, fontValueStyle: string, fontNumbersWeight: string, fontTitleWeight: string, fontUnitsWeight: string, fontValueWeight: string, barWidth: number, barStrokeWidth: number, barProgress: boolean, colorBar: string, colorBarStroke: string, colorBarProgress: string, colorBarShadow: string, barShadow: number}} GenericOptions\n */\nvar GenericOptions = {\n    // basic options\n    renderTo: null,\n    width: 0,\n    height: 0,\n    minValue: 0,\n    maxValue: 100,\n    value: 0,\n    units: false,\n    exactTicks: false,\n    majorTicks: [0, 20, 40, 60, 80, 100],\n    minorTicks: 10,\n    strokeTicks: true,\n    animatedValue: false,\n    animateOnInit: false,\n    title: false,\n    borders: true,\n    numbersMargin: 1,\n\n    // number formats\n    valueInt: 3,\n    valueDec: 2,\n    majorTicksInt: 1,\n    majorTicksDec: 0,\n\n    // animations\n    animation: true,\n    animationDuration: 500,\n    animationRule: 'cycle',\n\n    // colors\n    colorPlate: '#fff',\n    colorPlateEnd: '',\n    colorMajorTicks: '#444',\n    colorMinorTicks: '#666',\n    colorStrokeTicks: '',\n    colorTitle: '#888',\n    colorUnits: '#888',\n    colorNumbers: '#444',\n    colorNeedle: 'rgba(240,128,128,1)',\n    colorNeedleEnd: 'rgba(255,160,122,.9)',\n    colorValueText: '#444',\n    colorValueTextShadow: 'rgba(0,0,0,0.3)',\n    colorBorderShadow: 'rgba(0,0,0,0.5)',\n    colorBorderOuter: '#ddd',\n    colorBorderOuterEnd: '#aaa',\n    colorBorderMiddle: '#eee',\n    colorBorderMiddleEnd: '#f0f0f0',\n    colorBorderInner: '#fafafa',\n    colorBorderInnerEnd: '#ccc',\n    colorValueBoxRect: '#888',\n    colorValueBoxRectEnd: '#666',\n    colorValueBoxBackground: '#babab2',\n    colorValueBoxShadow: 'rgba(0,0,0,1)',\n    colorNeedleShadowUp: 'rgba(2,255,255,0.2)',\n    colorNeedleShadowDown: 'rgba(188,143,143,0.45)',\n    colorBarStroke: '#222',\n    colorBar: '#ccc',\n    colorBarProgress: '#888',\n    colorBarShadow: '#000',\n\n    fontNumbers: 'Arial',\n    fontTitle: 'Arial',\n    fontUnits: 'Arial',\n    fontValue: 'Arial',\n\n    fontNumbersSize: 20,\n    fontTitleSize: 24,\n    fontUnitsSize: 22,\n    fontValueSize: 26,\n\n    fontNumbersStyle: 'normal',\n    fontTitleStyle: 'normal',\n    fontUnitsStyle: 'normal',\n    fontValueStyle: 'normal',\n\n    fontNumbersWeight: 'normal',\n    fontTitleWeight: 'normal',\n    fontUnitsWeight: 'normal',\n    fontValueWeight: 'normal',\n\n    // needle\n    needle: true,\n    needleShadow: true,\n    needleType: 'arrow',\n    needleStart: 5,\n    needleEnd: 85,\n    needleWidth: 4,\n\n    // borders\n    borderOuterWidth: 3,\n    borderMiddleWidth: 3,\n    borderInnerWidth: 3,\n    borderShadowWidth: 3,\n\n    // value and highlights\n    valueBox: true,\n    valueBoxStroke: 5,\n    valueBoxWidth: 0,\n    valueText: '',\n    valueTextShadow: true,\n    valueBoxBorderRadius: 2.5,\n\n    // highlights\n    highlights: [{ from: 20, to: 60, color: '#eee' }, { from: 60, to: 80, color: '#ccc' }, { from: 80, to: 100, color: '#999' }],\n    highlightsWidth: 15,\n\n    // progress bar\n    barWidth: 20, // percents\n    barStrokeWidth: 0, // pixels\n    barProgress: true,\n    barShadow: 0\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Gauge collections type.\n *\n * It is used ES5 declaration here, because babel\n * transpiles inheritance incorrectly in this case.\n *\n * @class Collection\n * @constructor\n */\nfunction Collection() {\n    Array.prototype.constructor.apply(this, arguments);\n}\n\nCollection.prototype = Object.create(Array.prototype);\nCollection.prototype.constructor = Collection;\n\n/**\n * Returns gauge object by its identifier or index in the collection\n *\n * @param {string|number} id\n * @return {*}\n */\nCollection.prototype.get = function (id) {\n    if (typeof id === 'string') {\n        var i = 0;\n        var s = this.length;\n\n        for (; i < s; i++) {\n            var canvas = this[i].options.renderTo.tagName ? this[i].options.renderTo :\n            /* istanbul ignore next: should be tested with e2e tests */\n            document.getElementById(this[i].options.renderTo || '');\n\n            if (canvas.getAttribute('id') === id) {\n                return this[i];\n            }\n        }\n    } else if (typeof id === 'number') {\n        return this[id];\n    }\n\n    return null;\n};\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar version = '2.1.3';\n\nvar round = Math.round;\nvar abs = Math.abs;\n\nvar gauges = new Collection();\n\ngauges.version = version;\n\n/**\n * Basic abstract BaseGauge class implementing common functionality\n * for different type of gauges.\n *\n * It should not be instantiated directly but must be extended by a final\n * gauge implementation.\n *\n * @abstract\n * @example\n *\n * class MyCoolGauge extends BaseGauge {\n *\n *     // theses methods below MUST be implemented:\n *\n *     constructor(options) {\n *        // ... do something with options\n *        super(options);\n *        // ... implement anything else\n *     }\n *\n *     draw() {\n *         // ... some implementation here\n *         return this;\n *     }\n * }\n */\n\nvar BaseGauge = function (_EventEmitter) {\n    _inherits(BaseGauge, _EventEmitter);\n\n    /**\n     * Fired each time gauge is initialized on a page\n     *\n     * @event BaseGauge#init\n     */\n\n    /**\n     * Fired each time gauge scene is rendered\n     *\n     * @event BaseGauge#render\n     */\n\n    /**\n     * Fired each time gauge object is destroyed\n     *\n     * @event BaseGauge#destroy\n     */\n\n    /**\n     * Fired each time before animation is started on the gauge\n     *\n     * @event BaseGauge#animationStart\n     */\n\n    /**\n     * Fired each time animation scene is complete\n     *\n     * @event BaseGauge#animate\n     * @type {number} percent\n     * @type {number} value\n     */\n\n    /**\n     * Fired each time animation is complete on the gauge\n     *\n     * @event BaseGauge#animationEnd\n     */\n\n    /**\n     * @constructor\n     * @abstract\n     * @param {GenericOptions} options\n     */\n    function BaseGauge(options) {\n        _classCallCheck(this, BaseGauge);\n\n        var _this3 = _possibleConstructorReturn(this, (BaseGauge.__proto__ || Object.getPrototypeOf(BaseGauge)).call(this));\n\n        var className = _this3.constructor.name;\n\n        if (className === 'BaseGauge') {\n            throw new TypeError('Attempt to instantiate abstract class!');\n        }\n\n        gauges.push(_this3);\n\n        //noinspection JSUnresolvedVariable\n        /**\n         * Gauges version string\n         *\n         * @type {string}\n         */\n        _this3.version = version;\n\n        /**\n         * Gauge type class\n         *\n         * @type {BaseGauge} type\n         */\n        _this3.type = ns[className] || BaseGauge;\n\n        /**\n         * True if gauge has been drawn for the first time, false otherwise.\n         *\n         * @type {boolean}\n         */\n        _this3.initialized = false;\n\n        options.minValue = parseFloat(options.minValue);\n        options.maxValue = parseFloat(options.maxValue);\n        options.value = parseFloat(options.value) || 0;\n\n        if (!options.borders) {\n            options.borderInnerWidth = options.borderMiddleWidth = options.borderOuterWidth = 0;\n        }\n\n        if (!options.renderTo) {\n            throw TypeError('Canvas element was not specified when creating ' + 'the Gauge object!');\n        }\n\n        var canvas = options.renderTo.tagName ? options.renderTo :\n        /* istanbul ignore next: to be tested with e2e tests */\n        document.getElementById(options.renderTo);\n\n        if (!(canvas instanceof HTMLCanvasElement)) {\n            throw TypeError('Given gauge canvas element is invalid!');\n        }\n\n        options.width = parseFloat(options.width) || 0;\n        options.height = parseFloat(options.height) || 0;\n\n        if (!options.width || !options.height) {\n            if (!options.width) options.width = canvas.parentNode ? canvas.parentNode.offsetWidth : canvas.offsetWidth;\n            if (!options.height) options.height = canvas.parentNode ? canvas.parentNode.offsetHeight : canvas.offsetHeight;\n        }\n\n        /**\n         * Gauge options\n         *\n         * @type {GenericOptions} options\n         */\n        _this3.options = options || {};\n\n        if (_this3.options.animateOnInit) {\n            _this3._value = _this3.options.value;\n            _this3.options.value = _this3.options.minValue;\n        }\n\n        /**\n         * @type {SmartCanvas} canvas\n         */\n        _this3.canvas = new SmartCanvas(canvas, options.width, options.height);\n        _this3.canvas.onRedraw = _this3.draw.bind(_this3);\n\n        /**\n         * @type {Animation} animation\n         */\n        _this3.animation = new Animation(options.animationRule, options.animationDuration);\n        return _this3;\n    }\n\n    /**\n     * Sets new value for this gauge.\n     * If gauge is animated by configuration it will trigger a proper animation.\n     * Upsetting a value triggers gauge redraw.\n     *\n     * @param {number} value\n     */\n\n\n    _createClass(BaseGauge, [{\n        key: 'update',\n\n\n        /**\n         * Updates gauge configuration options at runtime and redraws the gauge\n         *\n         * @param {RadialGaugeOptions} options\n         * @returns {BaseGauge}\n         */\n        value: function update(options) {\n            Object.assign(this.options, this.type.configure(options || {}));\n\n            this.canvas.width = this.options.width;\n            this.canvas.height = this.options.height;\n\n            this.animation.rule = this.options.animationRule;\n            this.animation.duration = this.options.animationDuration;\n\n            this.canvas.redraw();\n\n            return this;\n        }\n\n        /**\n         * Performs destruction of this object properly\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var index = gauges.indexOf(this);\n\n            /* istanbul ignore else */\n            if (~index) {\n                //noinspection JSUnresolvedFunction\n                gauges.splice(index, 1);\n            }\n\n            this.canvas.destroy();\n            this.canvas = null;\n\n            this.animation.destroy();\n            this.animation = null;\n\n            this.emit('destroy');\n        }\n\n        /**\n         * Returns gauges version string\n         *\n         * @return {string}\n         */\n\n    }, {\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @abstract\n         * @returns {BaseGauge}\n         */\n        value: function draw() {\n            if (this.options.animateOnInit && !this.initialized) {\n                this.value = this._value;\n                this.initialized = true;\n                this.emit('init');\n            }\n\n            this.emit('render');\n\n            return this;\n        }\n\n        /**\n         * Inject given gauge object into DOM\n         *\n         * @param {string} type\n         * @param {GenericOptions} options\n         */\n\n    }, {\n        key: 'value',\n        set: function set(value) {\n            var _this4 = this;\n\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            var fromValue = this.options.value;\n\n            if (value === fromValue) {\n                return;\n            }\n\n            if (this.options.animation) {\n                if (this.animation.frame) {\n                    // animation is already in progress -\n                    // forget related old animation value\n                    // @see https://github.com/Mikhus/canvas-gauges/issues/94\n                    this.options.value = this._value;\n\n                    // if there is no actual value change requested stop it\n                    if (this._value === value) {\n                        this.animation.cancel();\n                        delete this._value;\n                        return;\n                    }\n                }\n\n                /**\n                 * @type {number}\n                 * @access private\n                 */\n                if (this._value === undefined) {\n                    this._value = value;\n                }\n\n                this.emit('animationStart');\n\n                this.animation.animate(function (percent) {\n                    var newValue = fromValue + (value - fromValue) * percent;\n\n                    _this4.options.animatedValue && _this4.emit('value', newValue, _this4.value);\n\n                    _this4.options.value = newValue;\n\n                    _this4.draw();\n\n                    _this4.emit('animate', percent, _this4.options.value);\n                }, function () {\n                    if (_this4._value !== undefined) {\n                        _this4.emit('value', _this4._value, _this4.value);\n                        _this4.options.value = _this4._value;\n                        delete _this4._value;\n                    }\n\n                    _this4.draw();\n                    _this4.emit('animationEnd');\n                });\n            } else {\n                this.emit('value', value, this.value);\n                this.options.value = value;\n                this.draw();\n            }\n        }\n\n        /**\n         * Returns current value of the gauge\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return typeof this._value === 'undefined' ? this.options.value : this._value;\n        }\n\n        /**\n         * Updates gauge options\n         *\n         * @param {*} options\n         * @return {BaseGauge}\n         * @access protected\n         */\n\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            return options;\n        }\n    }, {\n        key: 'initialize',\n        value: function initialize(type, options) {\n            return new DomObserver(options, 'canvas', type);\n        }\n\n        /**\n         * Initializes gauge from a given HTML element\n         * (given element should be valid HTML canvas gauge definition)\n         *\n         * @param {HTMLElement} element\n         */\n\n    }, {\n        key: 'fromElement',\n        value: function fromElement(element) {\n            var type = DomObserver.toCamelCase(element.getAttribute('data-type'));\n            var attributes = element.attributes;\n            var i = 0;\n            var s = attributes.length;\n            var options = {};\n\n            if (!type) {\n                return;\n            }\n\n            if (!/Gauge$/.test(type)) {\n                type += 'Gauge';\n            }\n\n            for (; i < s; i++) {\n                options[DomObserver.toCamelCase(attributes[i].name.replace(/^data-/, ''), false)] = DomObserver.parse(attributes[i].value);\n            }\n\n            new DomObserver(options, element.tagName, type).process(element);\n        }\n\n        /**\n         * Ensures value is proper number\n         *\n         * @param {*} value\n         * @param {number} min\n         * @return {number}\n         */\n\n    }, {\n        key: 'ensureValue',\n        value: function ensureValue(value) {\n            var min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            value = parseFloat(value);\n\n            if (isNaN(value) || !isFinite(value)) {\n                value = parseFloat(min) || 0;\n            }\n\n            return value;\n        }\n    }, {\n        key: 'version',\n        get: function get() {\n            return version;\n        }\n    }]);\n\n    return BaseGauge;\n}(EventEmitter);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['BaseGauge'] = BaseGauge;\n    ns['gauges'] = (window.document || {})['gauges'] = gauges;\n}\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * @access private\n * @typedef {CanvasRenderingContext2D|{max: number, maxRadius: number, barDimensions: object}} Canvas2DContext\n */\n\n/* istanbul ignore next: private, not testable */\n/**\n * Examines if a given error is something to throw or to ignore\n *\n * @param {Error} err\n */\nfunction verifyError(err) {\n    // there is some unpredictable error in FF in some circumstances\n    // which we found simply safe to ignore than to fight with it\n    // noinspection JSUnresolvedVariable\n    if (err instanceof DOMException && err.result === 0x8053000b) {\n        return; // ignore it\n    }\n\n    throw err;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Prepares major ticks data\n *\n * @access private\n * @param {GenericOptions|{ tickSide: string }} options\n * @return {[boolean, boolean]}\n */\nfunction prepareTicks(options) {\n    if (!(options.majorTicks instanceof Array)) {\n        options.majorTicks = options.majorTicks ? [options.majorTicks] : [];\n    }\n\n    if (!options.majorTicks.length) {\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.minValue, options));\n        options.majorTicks.push(drawings.formatMajorTickNumber(options.maxValue, options));\n    }\n\n    return [options.tickSide !== 'right', options.tickSide !== 'left'];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rounded corners rectangle\n *\n * @param {Canvas2DContext} context\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {number} r\n */\nfunction roundRect(context, x, y, w, h, r) {\n    context.beginPath();\n\n    context.moveTo(x + r, y);\n    context.lineTo(x + w - r, y);\n\n    context.quadraticCurveTo(x + w, y, x + w, y + r);\n    context.lineTo(x + w, y + h - r);\n\n    context.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n    context.lineTo(x + r, y + h);\n\n    context.quadraticCurveTo(x, y + h, x, y + h - r);\n    context.lineTo(x, y + r);\n\n    context.quadraticCurveTo(x, y, x + r, y);\n\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Pads a given value with leading zeros using the given options\n *\n * @param {number} val\n * @param {RadialGaugeOptions|{valueInt: number, valueDec: number}} options\n * @returns {string}\n */\nfunction padValue(val, options) {\n    var dec = options.valueDec;\n    var int = options.valueInt;\n    var i = 0;\n    var s = void 0,\n        strVal = void 0,\n        n = void 0;\n\n    val = parseFloat(val);\n    n = val < 0;\n    val = Math.abs(val);\n\n    if (dec > 0) {\n        strVal = val.toFixed(dec).toString().split('.');\n        s = int - strVal[0].length;\n\n        for (; i < s; ++i) {\n            strVal[0] = '0' + strVal[0];\n        }\n\n        strVal = (n ? '-' : '') + strVal[0] + '.' + strVal[1];\n    } else {\n        strVal = Math.round(val).toString();\n        s = int - strVal.length;\n\n        for (; i < s; ++i) {\n            strVal = '0' + strVal;\n        }\n\n        strVal = (n ? '-' : '') + strVal;\n    }\n\n    return strVal;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Formats a number for display on the dial's plate using the majorTicksFormat\n * config option.\n *\n * @param {number} num number to format\n * @param {object} options\n * @returns {string} formatted number\n */\nfunction formatMajorTickNumber(num, options) {\n    var right = void 0,\n        hasDec = false;\n\n    // First, force the correct number of digits right of the decimal.\n    if (options.majorTicksDec === 0) {\n        right = Math.round(num).toString();\n    } else {\n        right = num.toFixed(options.majorTicksDec);\n    }\n\n    // Second, force the correct number of digits left of the decimal.\n    if (options.majorTicksInt > 1) {\n        // Does this number have a decimal?\n        hasDec = ~right.indexOf('.');\n\n        // Is this number a negative number?\n        if (~right.indexOf('-')) {\n            return '-' + [options.majorTicksInt + options.majorTicksDec + 2 + (hasDec ? 1 : 0) - right.length].join('0') + right.replace('-', '');\n        } else {\n            return [options.majorTicksInt + options.majorTicksDec + 1 + (hasDec ? 1 : 0) - right.length].join('0') + right;\n        }\n    }\n\n    return right;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Transforms degrees to radians\n *\n * @param {number} degrees\n * @returns {number}\n */\nfunction radians(degrees) {\n    return degrees * Math.PI / 180;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns radial point coordinates\n *\n * @param {number} radius\n * @param {number} angle\n * @returns {{x: number, y: number}}\n */\nfunction radialPoint(radius, angle) {\n    return { x: -radius * Math.sin(angle), y: radius * Math.cos(angle) };\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Creates and returns linear gradient canvas object\n *\n * @param {Canvas2DContext} context\n * @param {string} colorFrom\n * @param {string} colorTo\n * @param {number} length\n * @param {boolean} [isVertical]\n * @param {number} [from]\n * @returns {CanvasGradient}\n */\nfunction linearGradient(context, colorFrom, colorTo, length) {\n    var isVertical = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    var from = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n    var grad = context.createLinearGradient(isVertical ? 0 : from, isVertical ? from : 0, isVertical ? 0 : length, isVertical ? length : 0);\n\n    grad.addColorStop(0, colorFrom);\n    grad.addColorStop(1, colorTo);\n\n    return grad;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws the shadow if it was not drawn\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {boolean} shadowDrawn\n * @return {boolean}\n */\nfunction drawShadow(context, options) {\n    var shadowDrawn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (shadowDrawn) {\n        context.restore();\n        return true;\n    }\n\n    context.save();\n\n    var w = options.borderShadowWidth;\n\n    if (w) {\n        context.shadowBlur = w;\n        context.shadowColor = options.colorBorderShadow;\n    }\n\n    return true;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle shadow\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawNeedleShadow(context, options) {\n    if (!options.needleShadow) return;\n\n    context.shadowOffsetX = 2;\n    context.shadowOffsetY = 2;\n    context.shadowBlur = 10;\n    context.shadowColor = options.colorNeedleShadowDown;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Constructs font styles for canvas fonts\n *\n * @param {GenericOptions} options\n * @param {string} target\n * @param {number} baseSize\n */\nfunction font(options, target, baseSize) {\n    return options['font' + target + 'Style'] + ' ' + options['font' + target + 'Weight'] + ' ' + options['font' + target + 'Size'] * baseSize + 'px ' + options['font' + target];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Resets some context settings\n *\n * @param {Canvas2DContext} context\n */\nfunction reset(context) {\n    context.shadowOffsetX = null;\n    context.shadowOffsetY = null;\n    context.shadowBlur = null;\n    context.shadowColor = '';\n    context.strokeStyle = null;\n    context.lineWidth = 0;\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Declares to drow value text shadow if configured\n *\n * @param context\n * @param options\n * @param offset\n * @param blur\n */\nfunction drawValueTextShadow(context, options, offset, blur) {\n    if (options.valueTextShadow) {\n        context.shadowOffsetX = offset;\n        context.shadowOffsetY = offset;\n        context.shadowBlur = blur;\n        context.shadowColor = options.colorValueTextShadow;\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box at given position\n *\n * @param {Canvas2DContext} context\n * @param {GenericOptions} options\n * @param {number|string} value\n * @param {number} x\n * @param {number} y\n * @param {number} max\n */\nfunction drawValueBox(context, options, value, x, y, max) {\n    if (!options.valueBox) return;\n\n    reset(context);\n\n    var addLength = options.valueDec ? 1 + options.valueDec : 0;\n    var maxValueWidth = '9'.repeat(Math.max.apply(null, [String(parseInt(value)).length + addLength].concat(options.majorTicks.map(function (val) {\n        return String(parseInt(val, 10)).length + addLength;\n    }))));\n    var text = options.valueText || padValue(value, options);\n    var tunit = max / 200;\n    var runit = max / 100;\n    var offset = 0.4 * runit;\n    var blur = 1.2 * runit;\n\n    context.font = font(options, 'Value', tunit);\n    drawValueTextShadow(context, options, offset, blur);\n\n    var tw = context.measureText(options.valueText ? text : '-' + padValue(Number(maxValueWidth), options)).width;\n\n    reset(context);\n\n    var th = parseFloat(options.fontValueSize) * tunit + offset + blur;\n    var sw = runit * parseFloat(options.valueBoxStroke);\n    var bmax = max * 2 - sw * 2;\n\n    var bw = tw + 10 * runit;\n    var bh = 1.1 * th + offset + blur;\n    var br = runit * options.valueBoxBorderRadius;\n    var obw = (parseFloat(options.valueBoxWidth) || 0) / 100 * bmax;\n\n    obw > bw && (bw = obw);\n    bw > bmax && (bw = bmax);\n\n    var bx = x - bw / 2;\n    var by = y - bh / 2;\n    var gy = y - 5.75 * runit;\n\n    context.beginPath();\n\n    if (br) roundRect(context, bx, by, bw, bh, br);else context.rect(bx, by, bw, bh);\n\n    if (sw) {\n        var grd = context.createRadialGradient(x, gy, runit * 10, x, gy, runit * 20);\n\n        grd.addColorStop(0, options.colorValueBoxRect);\n        grd.addColorStop(1, options.colorValueBoxRectEnd);\n\n        context.strokeStyle = grd;\n        context.lineWidth = sw;\n        context.stroke();\n    }\n\n    if (options.colorValueBoxShadow) {\n        context.shadowBlur = 1.2 * runit;\n        context.shadowColor = options.colorValueBoxShadow;\n    }\n\n    if (options.colorValueBoxBackground) {\n        context.fillStyle = options.colorValueBoxBackground;\n        context.fill();\n    }\n\n    context.closePath();\n    context.restore();\n\n    drawValueTextShadow(context, options, offset, blur);\n\n    context.fillStyle = options.colorValueText;\n    context.textAlign = 'center';\n    context.textBaseline = 'alphabetic';\n    context.fillText(text, bx + bw / 2, y + bh / 2 - th / 3);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns normalized value\n *\n * @param {GenericOptions} options\n * @return {{normal: number, indented: number}}\n */\nfunction normalizedValue(options) {\n    var value = options.value;\n    var min = options.minValue;\n    var max = options.maxValue;\n    var dt = (max - min) * 0.01;\n\n    return {\n        normal: value < min ? min : value > max ? max : value,\n        indented: value < min ? min - dt : value > max ? max + dt : value\n    };\n}\n\nvar drawings = {\n    roundRect: roundRect,\n    padValue: padValue,\n    formatMajorTickNumber: formatMajorTickNumber,\n    radians: radians,\n    radialPoint: radialPoint,\n    linearGradient: linearGradient,\n    drawNeedleShadow: drawNeedleShadow,\n    drawValueBox: drawValueBox,\n    verifyError: verifyError,\n    prepareTicks: prepareTicks,\n    drawShadow: drawShadow,\n    font: font,\n    normalizedValue: normalizedValue\n};\n\ndrawings;\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nvar PI = Math.PI;\nvar HPI = PI / 2;\n\n/**\n * Gauge configuration options\n *\n * @typedef {GenericOptions|{exactTicks: boolean, ticksAngle: number, startAngle: number, colorNeedleCircleOuter: string, colorNeedleCircleOuterEnd: string, colorNeedleCircleInner: string, colorNeedleCircleInnerEnd: string, needleCircleSize: number, needleCircleInner: boolean, needleCircleOuter: boolean, animationTarget: string, useMinPath: boolean}} RadialGaugeOptions\n */\n\n/**\n * Default gauge configuration options\n *\n * @access private\n * @type {RadialGaugeOptions}\n */\nvar defaultRadialGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    ticksAngle: 270,\n    startAngle: 45,\n\n    // colors\n    colorNeedleCircleOuter: '#f0f0f0',\n    colorNeedleCircleOuterEnd: '#ccc',\n    colorNeedleCircleInner: '#e8e8e8',\n    colorNeedleCircleInnerEnd: '#f5f5f5',\n\n    // needle\n    needleCircleSize: 10,\n    needleCircleInner: true,\n    needleCircleOuter: true,\n    needleStart: 20,\n\n    // custom animations\n    animationTarget: 'needle', // 'needle' or 'plate'\n    useMinPath: false,\n\n    barWidth: 0\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gradient-filled circle on a canvas\n *\n * @access private\n * @param {number} radius\n * @param {number} width\n * @param {Canvas2DContext} context\n * @param {string} start gradient start color\n * @param {string} end gradient end color\n */\nfunction drawRadialBorder(radius, width, context, start, end) {\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(radius), 0, PI * 2, true);\n    context.lineWidth = width;\n    context.strokeStyle = end ? drawings.linearGradient(context, start, end, radius) : start;\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns max radius without borders for the gauge\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @return {number}\n */\nfunction maxRadialRadius(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n\n    if (!context.maxRadius) {\n        context.maxRadius = context.max - options.borderShadowWidth - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio + (options.borderOuterWidth ? 0.5 : 0) + (options.borderMiddleWidth ? 0.5 : 0) + (options.borderInnerWidth ? 0.5 : 0);\n    }\n\n    return context.maxRadius;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge plate on the canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialPlate(context, options) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    var d0 = options.borderShadowWidth * pxRatio;\n    var r0 = context.max - d0 - options.borderOuterWidth * pxRatio / 2;\n    var r1 = r0 - options.borderOuterWidth * pxRatio / 2 - options.borderMiddleWidth * pxRatio / 2 + 0.5;\n    var r2 = r1 - options.borderMiddleWidth * pxRatio / 2 - options.borderInnerWidth * pxRatio / 2 + 0.5;\n    var r3 = maxRadialRadius(context, options);\n    var grad = void 0;\n    var shadowDrawn = false;\n\n    context.save();\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r0, options.borderOuterWidth * pxRatio, context, options.colorBorderOuter, options.colorBorderOuterEnd);\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r1, options.borderMiddleWidth * pxRatio, context, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawRadialBorder(r2, options.borderInnerWidth * pxRatio, context, options.colorBorderInner, options.colorBorderInnerEnd);\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    context.beginPath();\n    //noinspection JSUnresolvedFunction\n    context.arc(0, 0, abs(r3), 0, PI * 2, true);\n\n    if (options.colorPlateEnd) {\n        grad = context.createRadialGradient(0, 0, r3 / 2, 0, 0, r3);\n        grad.addColorStop(0, options.colorPlate);\n        grad.addColorStop(1, options.colorPlateEnd);\n    } else {\n        grad = options.colorPlate;\n    }\n\n    context.fillStyle = grad;\n\n    context.fill();\n    context.closePath();\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge highlight areas on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialHighlights(context, options) {\n    var hlWidth = context.max * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!hlWidth) return;\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options) - hlWidth / 2);\n    var i = 0,\n        s = options.highlights.length;\n    var vd = (options.maxValue - options.minValue) / options.ticksAngle;\n\n    context.save();\n\n    for (; i < s; i++) {\n        var hlt = options.highlights[i];\n\n        context.beginPath();\n\n        context.rotate(HPI);\n        context.arc(0, 0, r, drawings.radians(options.startAngle + (hlt.from - options.minValue) / vd), drawings.radians(options.startAngle + (hlt.to - options.minValue) / vd), false);\n        context.strokeStyle = hlt.color;\n        context.lineWidth = hlWidth;\n        context.stroke();\n        context.closePath();\n\n        context.restore();\n        context.save();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks bar on a canvas\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMinorTicks(context, options) {\n    var radius = radialTicksRadius(context, options);\n    var s = void 0,\n        range = void 0,\n        angle = void 0;\n    var i = 0;\n    var delta = 0;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n\n    context.lineWidth = SmartCanvas.pixelRatio;\n    context.strokeStyle = options.colorMinorTicks || options.colorStrokeTicks;\n\n    context.save();\n\n    if (options.exactTicks) {\n        range = options.maxValue - options.minValue;\n        s = minTicks ? range / minTicks : 0;\n        delta = (options.majorTicks[0] % minTicks || 0) * ratio;\n    } else {\n        s = minTicks * (options.majorTicks.length - 1);\n    }\n\n    for (; i < s; ++i) {\n        angle = options.startAngle + delta + i * (options.ticksAngle / s);\n\n        context.rotate(drawings.radians(angle));\n\n        context.beginPath();\n        context.moveTo(0, radius);\n        context.lineTo(0, radius - context.max * 0.075);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns ticks radius\n *\n * @access private\n * @param context\n * @param options\n * @return {number}\n */\nfunction radialTicksRadius(context, options) {\n    var unit = context.max / 100;\n\n    return maxRadialRadius(context, options) - 5 * unit - (options.barWidth ? (parseFloat(options.barStrokeWidth) || 0) * 2 + ((parseFloat(options.barWidth) || 0) + 5) * unit : 0);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge major ticks bar on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialMajorTicks(context, options) {\n    drawings.prepareTicks(options);\n\n    //noinspection JSUnresolvedFunction\n    var r = abs(radialTicksRadius(context, options));\n    var i = void 0,\n        colors = void 0;\n    var s = options.majorTicks.length;\n    var pixelRatio = SmartCanvas.pixelRatio;\n\n    context.lineWidth = 2 * pixelRatio;\n    context.save();\n\n    colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(s).fill(options.colorStrokeTicks || options.colorMajorTicks);\n\n    i = 0;\n    for (; i < s; ++i) {\n        context.strokeStyle = colors[i];\n        context.rotate(drawings.radians(radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s)));\n\n        context.beginPath();\n        context.moveTo(0, r);\n        context.lineTo(0, r - context.max * 0.15);\n        closeStrokedPath(context);\n    }\n\n    if (options.strokeTicks) {\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n        context.rotate(HPI);\n\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n        closeStrokedPath(context);\n    }\n}\n\n/* istanbul ignore next: private, not testable */\nfunction radialNextAngle(options, i, s) {\n    if (options.exactTicks) {\n        var ratio = options.ticksAngle / (options.maxValue - options.minValue);\n        return options.startAngle + ratio * (i - options.minValue);\n    }\n\n    return options.startAngle + i * (options.ticksAngle / (s - 1));\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Strokes, closes path and restores previous context state\n *\n * @param {Canvas2DContext} context\n */\nfunction closeStrokedPath(context) {\n    context.stroke();\n    context.restore();\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar numbers\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNumbers(context, options) {\n    var radius = radialTicksRadius(context, options) - context.max * 0.15;\n    var points = {};\n    var i = 0;\n    var s = options.majorTicks.length;\n    var isAnimated = options.animationTarget !== 'needle';\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(s).fill(options.colorNumbers);\n\n    var plateValueAngle = isAnimated ? -(options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle : 0;\n\n    if (isAnimated) {\n        context.save();\n        context.rotate(-drawings.radians(plateValueAngle));\n    }\n\n    context.font = drawings.font(options, 'Numbers', context.max / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n\n    for (; i < s; ++i) {\n        var angle = plateValueAngle + radialNextAngle(options, options.exactTicks ? options.majorTicks[i] : i, s);\n        var textWidth = context.measureText(options.majorTicks[i]).width;\n        var textHeight = options.fontNumbersSize;\n        var textRadius = Math.sqrt(textWidth * textWidth + textHeight * textHeight) / 2;\n        var point = drawings.radialPoint(radius - textRadius - options.numbersMargin / 100 * context.max, drawings.radians(angle));\n\n        if (angle === 360) angle = 0;\n\n        if (points[angle]) {\n            continue; //already drawn at this place, skipping\n        }\n\n        points[angle] = true;\n\n        context.fillStyle = colors[i];\n        context.fillText(options.majorTicks[i], point.x, point.y);\n    }\n\n    isAnimated && context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge title\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialTitle(context, options) {\n    if (!options.title) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Title', context.max / 200);\n    context.fillStyle = options.colorTitle;\n    context.textAlign = 'center';\n    context.fillText(options.title, 0, -context.max / 4.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws units name on the gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialUnits(context, options) {\n    if (!options.units) return;\n\n    context.save();\n    context.font = drawings.font(options, 'Units', context.max / 200);\n    context.fillStyle = options.colorUnits;\n    context.textAlign = 'center';\n    context.fillText(options.units, 0, context.max / 3.25, context.max * 0.8);\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge needle\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialNeedle(context, options) {\n    if (!options.needle) return;\n\n    var value = options.ticksAngle < 360 ? drawings.normalizedValue(options).indented : options.value;\n    var max = maxRadialRadius(context, options);\n    //noinspection JSUnresolvedFunction\n    var r1 = abs(max / 100 * options.needleCircleSize);\n    //noinspection JSUnresolvedFunction\n    var r2 = abs(max / 100 * options.needleCircleSize * 0.75);\n    //noinspection JSUnresolvedFunction\n    var rIn = abs(max / 100 * options.needleEnd);\n    //noinspection JSUnresolvedFunction\n    var rStart = abs(options.needleStart ? max / 100 * options.needleStart : 0);\n    //noinspection JSUnresolvedFunction\n    var pad1 = max / 100 * options.needleWidth;\n    var pad2 = max / 100 * options.needleWidth / 2;\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isFixed = options.animationTarget !== 'needle';\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    context.rotate(drawings.radians(isFixed ? options.startAngle : options.startAngle + (value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle));\n\n    context.fillStyle = drawings.linearGradient(context, options.colorNeedle, options.colorNeedleEnd, rIn - rStart);\n\n    if (options.needleType === 'arrow') {\n        context.beginPath();\n        context.moveTo(-pad2, -rStart);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(pixelRatio, rIn);\n        context.lineTo(pad1, 0);\n        context.lineTo(pad2, -rStart);\n        context.closePath();\n        context.fill();\n\n        context.beginPath();\n        context.lineTo(-0.5 * pixelRatio, rIn);\n        context.lineTo(-1 * pixelRatio, rIn);\n        context.lineTo(-pad1, 0);\n        context.lineTo(-pad2, -rStart);\n        context.lineTo(pad2 / 2 * pixelRatio - 2 * pixelRatio, -rStart);\n        context.closePath();\n        context.fillStyle = options.colorNeedleShadowUp;\n        context.fill();\n    } else {\n        // simple line needle\n        context.beginPath();\n        context.moveTo(-pad2, rIn);\n        context.lineTo(-pad2, rStart);\n        context.lineTo(pad2, rStart);\n        context.lineTo(pad2, rIn);\n        context.closePath();\n        context.fill();\n    }\n\n    if (options.needleCircleSize) {\n        context.restore();\n\n        drawings.drawNeedleShadow(context, options);\n\n        if (options.needleCircleOuter) {\n            context.beginPath();\n            context.arc(0, 0, r1, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleOuter, options.colorNeedleCircleOuterEnd, r1);\n            context.fill();\n            context.closePath();\n        }\n\n        if (options.needleCircleInner) {\n            context.beginPath();\n            context.arc(0, 0, r2, 0, PI * 2, true);\n            context.fillStyle = drawings.linearGradient(context, options.colorNeedleCircleInner, options.colorNeedleCircleInnerEnd, r2);\n            context.fill();\n            context.closePath();\n        }\n\n        context.restore();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge value box\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n * @param {number} value\n */\nfunction drawRadialValueBox(context, options, value) {\n    drawings.drawValueBox(context, options, value, 0, context.max - context.max * 0.33, context.max);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge progress bar\n *\n * @param {Canvas2DContext} context\n * @param {RadialGaugeOptions} options\n */\nfunction drawRadialProgressBar(context, options) {\n    var unit = context.max / 100;\n    var rMax = maxRadialRadius(context, options) - 5 * unit;\n    var sw = parseFloat(options.barStrokeWidth) || 0;\n    var w = (parseFloat(options.barWidth) || 0) * unit;\n    var rMin = rMax - sw * 2 - w;\n    var half = (rMax - rMin) / 2;\n    var r = rMin + half;\n    var delta = sw / r;\n    var sa = options.startAngle;\n    var ea = options.startAngle + options.ticksAngle;\n\n    context.save();\n    context.rotate(HPI);\n\n    if (sw) {\n        // draw stroke\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa) - delta, drawings.radians(ea) + delta, false);\n        context.strokeStyle = options.colorBarStroke;\n        context.lineWidth = half * 2;\n        context.stroke();\n        context.closePath();\n    }\n\n    if (w) {\n        // draw bar\n        context.beginPath();\n        context.arc(0, 0, r, drawings.radians(sa), drawings.radians(ea), false);\n        context.strokeStyle = options.colorBar;\n        context.lineWidth = w;\n        context.stroke();\n        context.closePath();\n\n        if (options.barShadow) {\n            // draw shadow\n            context.beginPath();\n            context.arc(0, 0, rMax, drawings.radians(sa), drawings.radians(ea), false);\n            context.clip();\n\n            context.beginPath();\n            context.strokeStyle = options.colorBar;\n            context.lineWidth = 1;\n            context.shadowBlur = options.barShadow;\n            context.shadowColor = options.colorBarShadow;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n            context.arc(0, 0, rMax, drawings.radians(options.startAngle), drawings.radians(options.startAngle + options.ticksAngle), false);\n            context.stroke();\n            context.closePath();\n\n            context.restore();\n            context.rotate(HPI);\n        }\n\n        // draw bar progress\n        if (options.barProgress) {\n            context.beginPath();\n            context.arc(0, 0, r, drawings.radians(sa), drawings.radians(sa + (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle), false);\n            context.strokeStyle = options.colorBarProgress;\n            context.lineWidth = w;\n            context.stroke();\n            context.closePath();\n        }\n    }\n\n    context.restore();\n}\n\n/**\n * Find and return gauge value to display\n *\n * @param {RadialGauge} gauge\n */\nfunction displayValue(gauge) {\n    if (gauge.options.animatedValue) {\n        return gauge.options.value;\n    }\n\n    return gauge.value;\n}\n\n/**\n * Minimalistic HTML5 Canvas Gauge\n * @example\n *  var gauge = new RadialGauge({\n *     renderTo: 'gauge-id', // identifier of HTML canvas element or element itself\n *     width: 400,\n *     height: 400,\n *     units: 'Km/h',\n *     title: false,\n *     value: 0,\n *     minValue: 0,\n *     maxValue: 220,\n *     majorTicks: [\n *         '0','20','40','60','80','100','120','140','160','180','200','220'\n *     ],\n *     minorTicks: 2,\n *     strokeTicks: false,\n *     highlights: [\n *         { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\n *         { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\n *         { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\n *         { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\n *         { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\n *     ],\n *     colorPlate: '#222',\n *     colorMajorTicks: '#f5f5f5',\n *     colorMinorTicks: '#ddd',\n *     colorTitle: '#fff',\n *     colorUnits: '#ccc',\n *     colorNumbers: '#eee',\n *     colorNeedleStart: 'rgba(240, 128, 128, 1)',\n *     colorNeedleEnd: 'rgba(255, 160, 122, .9)',\n *     valueBox: true,\n *     animationRule: 'bounce'\n * });\n * // draw initially\n * gauge.draw();\n * // animate\n * setInterval(() => {\n *    gauge.value = Math.random() * -220 + 220;\n * }, 1000);\n */\n\nvar RadialGauge = function (_BaseGauge) {\n    _inherits(RadialGauge, _BaseGauge);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event RadialGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event RadialGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event RadialGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event RadialGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event RadialGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event RadialGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event RadialGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event RadialGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event RadialGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event RadialGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {RadialGaugeOptions} options\n     */\n    function RadialGauge(options) {\n        _classCallCheck(this, RadialGauge);\n\n        options = Object.assign({}, defaultRadialGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (RadialGauge.__proto__ || Object.getPrototypeOf(RadialGauge)).call(this, RadialGauge.configure(options)));\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n\n    _createClass(RadialGauge, [{\n        key: 'draw',\n\n\n        /**\n         * Triggering gauge render on a canvas.\n         *\n         * @returns {RadialGauge}\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight];\n                var x = _ref[0];\n                var y = _ref[1];\n                var w = _ref[2];\n                var h = _ref[3];\n\n                var options = this.options;\n\n                if (options.animationTarget === 'needle') {\n                    if (!canvas.elementClone.initialized) {\n                        var context = canvas.contextClone;\n\n                        // clear the cache\n                        context.clearRect(x, y, w, h);\n                        context.save();\n\n                        this.emit('beforePlate');\n                        drawRadialPlate(context, options);\n                        this.emit('beforeHighlights');\n                        drawRadialHighlights(context, options);\n                        this.emit('beforeMinorTicks');\n                        drawRadialMinorTicks(context, options);\n                        this.emit('beforeMajorTicks');\n                        drawRadialMajorTicks(context, options);\n                        this.emit('beforeNumbers');\n                        drawRadialNumbers(context, options);\n                        this.emit('beforeTitle');\n                        drawRadialTitle(context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    this.canvas.commit();\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n                    this.emit('beforeValueBox');\n                    drawRadialValueBox(canvas.context, options, displayValue(this));\n                    this.emit('beforeNeedle');\n                    drawRadialNeedle(canvas.context, options);\n                } else {\n                    var plateValueAngle = -drawings.radians((options.value - options.minValue) / (options.maxValue - options.minValue) * options.ticksAngle);\n\n                    // clear the canvas\n                    canvas.context.clearRect(x, y, w, h);\n                    canvas.context.save();\n\n                    this.emit('beforePlate');\n                    drawRadialPlate(canvas.context, options);\n\n                    canvas.context.rotate(plateValueAngle);\n\n                    // animated\n                    this.emit('beforeHighlights');\n                    drawRadialHighlights(canvas.context, options);\n                    this.emit('beforeMinorTicks');\n                    drawRadialMinorTicks(canvas.context, options);\n                    this.emit('beforeMajorTicks');\n                    drawRadialMajorTicks(canvas.context, options);\n                    this.emit('beforeNumbers');\n                    drawRadialNumbers(canvas.context, options);\n                    this.emit('beforeProgressBar');\n                    drawRadialProgressBar(canvas.context, options);\n\n                    // non-animated\n                    canvas.context.rotate(-plateValueAngle);\n                    canvas.context.save();\n\n                    if (!canvas.elementClone.initialized) {\n                        var _context = canvas.contextClone;\n\n                        // clear the cache\n                        _context.clearRect(x, y, w, h);\n                        _context.save();\n\n                        this.emit('beforeTitle');\n                        drawRadialTitle(_context, options);\n                        this.emit('beforeUnits');\n                        drawRadialUnits(_context, options);\n                        this.emit('beforeNeedle');\n                        drawRadialNeedle(_context, options);\n\n                        canvas.elementClone.initialized = true;\n                    }\n\n                    canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                }\n\n                // value box animations\n                this.emit('beforeValueBox');\n                drawRadialValueBox(canvas.context, options, displayValue(this));\n\n                _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }, {\n        key: 'value',\n\n\n        /**\n         * Sets the value for radial gauge\n         *\n         * @param {number} value\n         */\n        set: function set(value) {\n            value = BaseGauge.ensureValue(value, this.options.minValue);\n\n            if (this.options.animation && this.options.ticksAngle === 360 && this.options.useMinPath) {\n                this._value = value;\n                value = this.options.value + ((value - this.options.value) % 360 + 540) % 360 - 180;\n            }\n\n            _set(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', value, this);\n        }\n\n        /**\n         * Returns current gauge value\n         *\n         * @return {number}\n         */\n        ,\n        get: function get() {\n            return _get(RadialGauge.prototype.__proto__ || Object.getPrototypeOf(RadialGauge.prototype), 'value', this);\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            if (options.barWidth > 50) options.barWidth = 50;\n\n            /* istanbul ignore if */\n            if (isNaN(options.startAngle)) options.startAngle = 45;\n            /* istanbul ignore if */\n            if (isNaN(options.ticksAngle)) options.ticksAngle = 270;\n\n            /* istanbul ignore if */\n            if (options.ticksAngle > 360) options.ticksAngle = 360;\n            /* istanbul ignore if */\n            if (options.ticksAngle < 0) options.ticksAngle = 0;\n\n            /* istanbul ignore if */\n            if (options.startAngle < 0) options.startAngle = 0;\n            /* istanbul ignore if */\n            if (options.startAngle > 360) options.startAngle = 360;\n\n            return options;\n        }\n    }]);\n\n    return RadialGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['RadialGauge'] = RadialGauge;\n}\n\nBaseGauge.initialize('RadialGauge', defaultRadialGaugeOptions);\n\n/*!\n * The MIT License (MIT)\n *\n * Copyright (c) 2016 Mykhailo Stadnyk <mikhus@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Linear gauge configuration options\n *\n * @typedef {GenericOptions|{borderRadius: number, barBeginCircle: number, tickSide: string, needleSide: string, numberSide: string, ticksWidth: number, ticksWidthMinor: number, ticksPadding: number, barLength: number, colorBarEnd: string, colorBarProgressEnd: string}} LinearGaugeOptions\n */\n\n/**\n * Default linear gauge configuration options\n *\n * @type {LinearGaugeOptions}\n */\nvar defaultLinearGaugeOptions = Object.assign({}, GenericOptions, {\n    // basic options\n    borderRadius: 0,\n    // width: 150,\n    // height: 400,\n\n    // bar\n    barBeginCircle: 30, // percents\n    colorBarEnd: '',\n    colorBarProgressEnd: '',\n\n    needleWidth: 6,\n\n    tickSide: 'both', // available: 'left', 'right', 'both'\n    needleSide: 'both', // available: 'left', 'right', 'both'\n\n    numberSide: 'both', // available: 'left', 'right', 'both'\n\n    ticksWidth: 10,\n    ticksWidthMinor: 5,\n    ticksPadding: 5,\n    barLength: 85,\n    fontTitleSize: 26,\n\n    highlightsWidth: 10\n});\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawRectangle(context, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.fillStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, w > h ? w : h, h > w, w > h ? x : y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws rectangle on a canvas\n *\n * @param {Canvas2DContext} context\n * @param {number} width width of the border\n * @param {number} r radius for founded corner rectangle if 0 or less won't be drawn\n * @param {number} x x-coordinate of the top-left corner\n * @param {number} y y-coordinate of the top-left corner\n * @param {number} w width of the rectangle\n * @param {number} h height of the rectangle\n * @param {string} colorStart base fill color of the rectangle\n * @param {string} [colorEnd] gradient color of the rectangle\n */\nfunction drawLinearBorder(context, width, r, x, y, w, h, colorStart, colorEnd) {\n    context.beginPath();\n    context.lineWidth = width;\n    context.strokeStyle = colorEnd ? drawings.linearGradient(context, colorStart, colorEnd, h, true, y) : colorStart;\n\n    r > 0 ? drawings.roundRect(context, x, y, w, h, r) : context.rect(x, y, w, h);\n\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge plate\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearPlate(context, options, x, y, w, h) {\n    var pxRatio = SmartCanvas.pixelRatio;\n    context.save();\n\n    var r = options.borderRadius * pxRatio;\n    var w1 = w - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var w2 = w1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var w3 = w2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var w4 = w3 - options.borderInnerWidth * pxRatio;\n\n    var h1 = h - options.borderShadowWidth - options.borderOuterWidth * pxRatio;\n    var h2 = h1 - options.borderOuterWidth * pxRatio - options.borderMiddleWidth * pxRatio;\n    var h3 = h2 - options.borderMiddleWidth * pxRatio - options.borderInnerWidth * pxRatio;\n    var h4 = h3 - options.borderInnerWidth * pxRatio;\n\n    var x2 = x - (w2 - w1) / 2;\n    var x3 = x2 - (w3 - w2) / 2;\n    var x4 = x3 - (w4 - w3) / 2;\n\n    var y2 = y - (h2 - h1) / 2;\n    var y3 = y2 - (h3 - h2) / 2;\n    var y4 = y3 - (h4 - h3) / 2;\n    var aliasingOffset = 0;\n    var shadowDrawn = false;\n\n    if (options.borderOuterWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderOuterWidth * pxRatio, r, x + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, y + options.borderOuterWidth * pxRatio / 2 - aliasingOffset, w1, h1, options.colorBorderOuter, options.colorBorderOuterEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderMiddleWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderMiddleWidth * pxRatio, r -= 1 + aliasingOffset * 2, x2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, y2 + options.borderMiddleWidth * pxRatio / 2 - aliasingOffset, w2 + aliasingOffset * 2, h2 + aliasingOffset * 2, options.colorBorderMiddle, options.colorBorderMiddleEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    if (options.borderInnerWidth) {\n        shadowDrawn = drawings.drawShadow(context, options, shadowDrawn);\n        drawLinearBorder(context, options.borderInnerWidth * pxRatio, r -= 1 + aliasingOffset * 2, x3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, y3 + options.borderInnerWidth * pxRatio / 2 - aliasingOffset, w3 + aliasingOffset * 2, h3 + aliasingOffset * 2, options.colorBorderInner, options.colorBorderInnerEnd);\n        aliasingOffset += 0.5 * pxRatio;\n    }\n\n    drawings.drawShadow(context, options, shadowDrawn);\n\n    drawRectangle(context, r, x4, y4, w4 + aliasingOffset * 2, h4 + aliasingOffset * 2, options.colorPlate, options.colorPlateEnd);\n\n    context.restore();\n\n    return [x4, y4, w4, h4];\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Calculates and returns linear gauge base bar dimensions.\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions|{barStrokeWidth: number, barBeginCircle: number, barWidth: number, hasLeft: boolean, hasRight: boolean}} options\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @return {{isVertical: boolean, width: number, length: number, barWidth: number, barLength: number, strokeWidth: number, barMargin: number, radius: number, x0: number, y0: number, barOffset: number, titleMargin: number, unitsMargin: number, X: number, Y: number, baseX: number, baseY: number, ticksPadding: number}}\n */\nfunction barDimensions(context, options, x, y, w, h) {\n    var pixelRatio = SmartCanvas.pixelRatio;\n    var isVertical = h >= w;\n    var width = isVertical ? w * 0.85 : h;\n    var length = isVertical ? h : w;\n\n    //noinspection JSUnresolvedFunction\n    x = isVertical ? round(x + (w - width) / 2) : x;\n\n    var hasTitle = !!options.title;\n    var hasUnits = !!options.units;\n    var hasValue = !!options.valueBox;\n\n    var titleMargin = void 0;\n    var unitsMargin = void 0;\n    var valueMargin = void 0;\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = round(length * 0.05);\n        //noinspection JSUnresolvedFunction\n        titleMargin = round(length * 0.075);\n        //noinspection JSUnresolvedFunction\n        valueMargin = round(length * 0.11);\n\n        if (hasTitle) {\n            length -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) length -= unitsMargin;\n        if (hasValue) length -= valueMargin;\n    } else {\n        //noinspection JSUnresolvedFunction\n        unitsMargin = titleMargin = round(width * 0.15);\n\n        if (hasTitle) {\n            width -= titleMargin;\n            y += titleMargin;\n        }\n\n        if (hasUnits) width -= unitsMargin;\n    }\n\n    var strokeWidth = options.barStrokeWidth * 2;\n    //noinspection JSUnresolvedFunction\n    var radius = options.barBeginCircle ? round(width * options.barBeginCircle / 200 - strokeWidth / 2) : 0;\n    //noinspection JSUnresolvedFunction\n    var barWidth = round(width * options.barWidth / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barLength = round(length * options.barLength / 100 - strokeWidth);\n    //noinspection JSUnresolvedFunction\n    var barMargin = round((length - barLength) / 2);\n\n    // coordinates for arc of the bar if configured\n    //noinspection JSUnresolvedFunction\n    var x0 = round(x + (isVertical ? width / 2 : barMargin + radius));\n    //noinspection JSUnresolvedFunction\n    var y0 = round(y + (isVertical ? length - barMargin - radius + strokeWidth / 2 : width / 2));\n    var dx = isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n    var dy = !isVertical && !(options.hasLeft && options.hasRight) ? (options.hasRight ? -1 : 1) * options.ticksWidth / 100 * width : 0;\n\n    //noinspection JSUndefinedPropertyAssignment\n    context.barDimensions = {\n        isVertical: isVertical,\n        width: width,\n        length: length,\n        barWidth: barWidth,\n        barLength: barLength,\n        strokeWidth: strokeWidth,\n        barMargin: barMargin,\n        radius: radius,\n        pixelRatio: pixelRatio,\n        barOffset: null,\n        titleMargin: hasTitle ? titleMargin : 0,\n        unitsMargin: hasUnits ? unitsMargin : 0,\n        get ticksLength() {\n            return this.barLength - this.barOffset - this.strokeWidth;\n        },\n        X: x + dx,\n        Y: y + dy,\n        x0: x0 + dx,\n        y0: y0 + dy,\n        baseX: x,\n        baseY: y,\n        ticksPadding: options.ticksPadding / 100\n    };\n\n    return context.barDimensions;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws bar shape from the given options on a given canvas context\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {string} type\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearBarShape(context, options, type, x, y, w, h) {\n    var _barDimensions = barDimensions(context, options, x, y, w, h);\n\n    var isVertical = _barDimensions.isVertical;\n    var width = _barDimensions.width;\n    var barWidth = _barDimensions.barWidth;\n    var barLength = _barDimensions.barLength;\n    var strokeWidth = _barDimensions.strokeWidth;\n    var barMargin = _barDimensions.barMargin;\n    var radius = _barDimensions.radius;\n    var x0 = _barDimensions.x0;\n    var y0 = _barDimensions.y0;\n    var X = _barDimensions.X;\n    var Y = _barDimensions.Y;\n\n    var fullBarLength = barLength;\n\n    context.save();\n    context.beginPath();\n\n    if (options.barBeginCircle) {\n        var direction = drawings.radians(isVertical ? 270 : 0);\n        var alpha = Math.asin(barWidth / 2 / radius);\n        var cosAlpha = Math.cos(alpha);\n        var sinAlpha = Math.sin(alpha);\n\n        var x1 = x0 + (isVertical ? radius * sinAlpha : radius * cosAlpha - strokeWidth / 2);\n        var y1 = isVertical ? y0 - radius * cosAlpha : y0 + radius * sinAlpha;\n        //noinspection JSUnresolvedFunction\n        var cutRadius = isVertical ? abs(y1 - y0) : abs(x1 - x0);\n\n        //noinspection JSUnresolvedFunction\n        context.barDimensions.barOffset = round(cutRadius + radius);\n\n        // bottom point\n        //noinspection JSUnresolvedFunction\n        var x2 = isVertical ? round(x0 - radius * sinAlpha) : x1;\n        //noinspection JSUnresolvedFunction\n        var y2 = isVertical ? y1 : round(y0 - radius * sinAlpha);\n\n        if (type === 'progress') {\n            barLength = context.barDimensions.barOffset + (barLength - context.barDimensions.barOffset) * (drawings.normalizedValue(options).normal - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        // bar ends at\n        //noinspection JSUnresolvedFunction\n        var x3 = round(x1 + barLength - context.barDimensions.barOffset + strokeWidth / 2); // h\n        //noinspection JSUnresolvedFunction\n        var y3 = round(y1 - barLength + context.barDimensions.barOffset - strokeWidth / 2); // v\n\n        context.arc(x0, y0, radius, direction + alpha, direction - alpha);\n\n        if (isVertical) {\n            context.moveTo(x1, y2);\n            context.lineTo(x1, y3);\n            context.lineTo(x2, y3);\n            context.lineTo(x2, y2);\n        } else {\n            context.moveTo(x1, y2);\n            context.lineTo(x3, y2);\n            context.lineTo(x3, y1);\n            context.lineTo(x1, y1);\n        }\n    } else {\n        // simply rectangle\n        //noinspection JSUnresolvedFunction\n        var rx = round(isVertical ? X + (width - barWidth) / 2 : X + barMargin);\n        //noinspection JSUnresolvedFunction\n        var ry = round(isVertical ? Y + barLength + barMargin : Y + (width - barWidth) / 2);\n\n        if (type === 'progress') {\n            barLength *= (options.value - options.minValue) / (options.maxValue - options.minValue);\n        }\n\n        if (isVertical) context.rect(rx, ry, barWidth, -barLength);else context.rect(rx, ry, barLength, barWidth);\n    }\n\n    if (type !== 'progress' && options.barStrokeWidth) {\n        context.lineWidth = strokeWidth;\n        context.strokeStyle = options.colorBarStroke;\n        //context.lineJoin = 'round';\n        context.stroke();\n    }\n\n    if (type !== 'progress' && options.colorBar) {\n        context.fillStyle = options.colorBarEnd ? drawings.linearGradient(context, options.colorBar, options.colorBarEnd, barLength, isVertical, isVertical ? Y : X) : options.colorBar;\n        context.fill();\n    } else if (type === 'progress' && options.colorBarProgress) {\n        context.fillStyle = options.colorBarProgressEnd ? drawings.linearGradient(context, options.colorBarProgress, options.colorBarProgressEnd, fullBarLength, isVertical, isVertical ? Y : X) : options.colorBarProgress;\n        context.fill();\n    }\n\n    context.closePath();\n\n    // fix dimensions for further usage\n    if (options.barBeginCircle) context.barDimensions.radius += strokeWidth;\n\n    context.barDimensions.barWidth += strokeWidth;\n    context.barDimensions.barLength += strokeWidth;\n}\n\n/**\n * Draws gauge bar\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBar(context, options, x, y, w, h) {\n    drawLinearBarShape(context, options, '', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Helper function to calculate bar ticks presence on the sides\n *\n * @param {string} notWhich\n * @param {LinearGaugeOptions} options\n * @return {boolean}\n */\nfunction hasTicksBar(notWhich, options) {\n    return options.needleSide !== notWhich || options.tickSide !== notWhich || options.numberSide !== notWhich;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar progress\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} x x-coordinate of the top-left corner of the gauge\n * @param {number} y y-coordinate of the top-left corner of the gauge\n * @param {number} w width of the gauge\n * @param {number} h height of the gauge\n */\nfunction drawLinearBarProgress(context, options, x, y, w, h) {\n    options.barProgress && drawLinearBarShape(context, options, 'progress', x, y, w, h);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws gauge bar highlighted areas\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarHighlights(context, options) {\n    var _context$barDimension = context.barDimensions;\n    var isVertical = _context$barDimension.isVertical;\n    var width = _context$barDimension.width;\n    var length = _context$barDimension.length;\n    var barWidth = _context$barDimension.barWidth;\n    var barOffset = _context$barDimension.barOffset;\n    var barMargin = _context$barDimension.barMargin;\n    var X = _context$barDimension.X;\n    var Y = _context$barDimension.Y;\n    var ticksLength = _context$barDimension.ticksLength;\n    var ticksPadding = _context$barDimension.ticksPadding;\n\n    var hlWidth = width * (parseFloat(options.highlightsWidth) || 0) / 100;\n\n    if (!options.highlights || !hlWidth) return;\n\n    var hasLeft = options.tickSide !== 'right';\n    var hasRight = options.tickSide !== 'left';\n    var i = 0;\n    var s = options.highlights.length;\n    var tickOffset = (width - barWidth) / 2;\n    var interval = options.maxValue - options.minValue;\n    //noinspection JSUnresolvedFunction\n    var eX = round(isVertical ? X + tickOffset : X + barMargin + barOffset);\n    var eH = hlWidth;\n    var eY = isVertical ? Y + length - barMargin - barOffset : Y + tickOffset;\n    //noinspection JSUnresolvedFunction\n    var hLeft = round((options.ticksWidth / 100 + ticksPadding) * width) + (hlWidth - options.ticksWidth / 100 * width);\n    //noinspection JSUnresolvedFunction\n    var hRight = round(barWidth + ticksPadding * width);\n\n    context.save();\n\n    for (; i < s; i++) {\n        var entry = options.highlights[i];\n        //noinspection JSUnresolvedFunction\n        var eStart = ticksLength * abs(options.minValue - entry.from) / interval;\n        //noinspection JSUnresolvedFunction\n        var eW = ticksLength * abs((entry.to - entry.from) / interval);\n\n        context.beginPath();\n        context.fillStyle = entry.color;\n\n        if (isVertical) {\n            if (hasLeft) context.rect(eX - hLeft, eY - eStart, eH, -eW);\n\n            if (hasRight) context.rect(eX + hRight, eY - eStart, eH, -eW);\n        } else {\n            if (hasLeft) context.rect(eX + eStart, eY - hLeft, eW, eH);\n\n            if (hasRight) context.rect(eX + eStart, eY + hRight, eW, eH);\n        }\n\n        context.fill();\n        context.closePath();\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws a tick line on a linear gauge\n *\n * @param {Canvas2DContext} context\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nfunction drawLinearTick(context, x1, y1, x2, y2) {\n    context.beginPath();\n\n    context.moveTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.stroke();\n\n    context.closePath();\n    context.save();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks\n *\n * @param {Canvas2DContext} context\n * @param {string} color\n * @param {number[]} ticks\n * @param {number} minVal\n * @param {number} maxVal\n * @param {boolean} hasLeft\n * @param {boolean} hasRight\n * @param {number} lineWidth\n * @param {number} lineLength\n */\nfunction drawLinearTicks(context, color, ticks, minVal, maxVal, hasLeft, hasRight, lineWidth, lineLength) {\n    var _context$barDimension2 = context.barDimensions;\n    var isVertical = _context$barDimension2.isVertical;\n    var length = _context$barDimension2.length;\n    var barWidth = _context$barDimension2.barWidth;\n    var barOffset = _context$barDimension2.barOffset;\n    var barMargin = _context$barDimension2.barMargin;\n    var pixelRatio = _context$barDimension2.pixelRatio;\n    var width = _context$barDimension2.width;\n    var X = _context$barDimension2.X;\n    var Y = _context$barDimension2.Y;\n    var ticksLength = _context$barDimension2.ticksLength;\n    var ticksPadding = _context$barDimension2.ticksPadding;\n\n    var tickOffset = (width - barWidth) / 2;\n    var tickX = void 0,\n        tickY = void 0;\n    var i = 0;\n    var s = ticks.length;\n    var val = void 0;\n    var tickLen = lineLength * width;\n    var tickLeft = tickOffset - ticksPadding * width;\n    var tickRight = tickOffset + barWidth + tickLen + ticksPadding * width;\n    var colors = color instanceof Array ? color : new Array(ticks.length).fill(color);\n\n    context.lineWidth = lineWidth * pixelRatio;\n    context.save();\n\n    var ratio = ticksLength / (maxVal - minVal);\n    for (; i < s; i++) {\n        val = ticks[i];\n        context.strokeStyle = colors[i];\n\n        if (isVertical) {\n            tickY = Y + length - barMargin - barOffset + (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickX = X + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n\n            if (hasRight) {\n                tickX = X + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, round(tickX - tickLen), tickY);\n            }\n        } else {\n            tickX = X + barMargin + barOffset - (minVal - val) * ratio;\n\n            if (hasLeft) {\n                tickY = Y + tickLeft;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, tickY, tickX, round(tickY - tickLen));\n            }\n\n            if (hasRight) {\n                tickY = Y + tickRight;\n                //noinspection JSUnresolvedFunction\n                drawLinearTick(context, tickX, round(tickY), tickX, tickY - tickLen);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicks(context, options) {\n    var _drawings$prepareTick = drawings.prepareTicks(options);\n\n    var _drawings$prepareTick2 = _slicedToArray(_drawings$prepareTick, 2);\n\n    var hasLeft = _drawings$prepareTick2[0];\n    var hasRight = _drawings$prepareTick2[1];\n\n    var lineWidth = 2;\n    var valuePerNonExactTick = (options.maxValue - options.minValue) / (options.majorTicks.length - 1);\n    var colors = options.colorMajorTicks instanceof Array ? options.colorMajorTicks : new Array(options.majorTicks.length).fill(options.colorStrokeTicks || options.colorMajorTicks);\n    var ticks = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n\n    drawLinearTicks(context, colors, ticks, options.minValue, options.maxValue, hasLeft, hasRight, lineWidth, options.ticksWidth / 100);\n\n    if (options.strokeTicks) {\n        var _context$barDimension3 = context.barDimensions;\n        var isVertical = _context$barDimension3.isVertical;\n        var length = _context$barDimension3.length;\n        var width = _context$barDimension3.width;\n        var barWidth = _context$barDimension3.barWidth;\n        var barMargin = _context$barDimension3.barMargin;\n        var barOffset = _context$barDimension3.barOffset;\n        var X = _context$barDimension3.X;\n        var Y = _context$barDimension3.Y;\n        var ticksLength = _context$barDimension3.ticksLength;\n        var pixelRatio = _context$barDimension3.pixelRatio;\n        var ticksPadding = _context$barDimension3.ticksPadding;\n\n        var rightTicks = (width - barWidth) / 2 + barWidth + ticksPadding * width;\n        var leftTicks = (width - barWidth) / 2 - ticksPadding * width;\n        var sX = void 0,\n            sY = void 0,\n            eX = void 0,\n            eY = void 0;\n\n        context.strokeStyle = options.colorStrokeTicks || colors[0];\n\n        lineWidth *= pixelRatio;\n\n        if (isVertical) {\n            sY = Y + length - barMargin - barOffset + lineWidth / 2;\n            eY = sY - ticksLength - lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eX = sX = round(X + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        } else {\n            sX = X + barMargin + barOffset - lineWidth / 2;\n            eX = sX + ticksLength + lineWidth;\n\n            if (hasLeft) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + leftTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n\n            if (hasRight) {\n                //noinspection JSUnresolvedFunction\n                eY = sY = round(Y + rightTicks);\n                drawLinearTickStroke(context, sX, sY, eX, eY);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws ticks stroke\n *\n * @param {Canvas2DContext} context\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n */\nfunction drawLinearTickStroke(context, sX, sY, eX, eY) {\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws minor ticks\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMinorTicks(context, options) {\n    var _drawings$prepareTick3 = drawings.prepareTicks(options);\n\n    var _drawings$prepareTick4 = _slicedToArray(_drawings$prepareTick3, 2);\n\n    var hasLeft = _drawings$prepareTick4[0];\n    var hasRight = _drawings$prepareTick4[1];\n\n    var ticks = [];\n    var i = options.minValue;\n    var minTicks = Math.abs(options.minorTicks) || 0;\n    var valuePerNonExactTick = minTicks ? (options.maxValue - options.minValue) / (minTicks * (options.majorTicks.length - 1)) : 0;\n\n    if (minTicks) {\n        if (options.exactTicks) {\n            var delta = options.majorTicks[0] % minTicks || 0;\n\n            for (; i < options.maxValue; i += minTicks) {\n                ticks.push(delta + i);\n            }\n        } else {\n            for (; i < options.maxValue; i += valuePerNonExactTick) {\n                ticks.push(i);\n            }\n        }\n    }\n\n    drawLinearTicks(context, options.colorMinorTicks || options.colorStrokeTicks, ticks, options.minValue, options.maxValue, hasLeft, hasRight, 1, options.ticksWidthMinor / 100);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws major tick numbers\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearMajorTicksNumbers(context, options) {\n    var _context$barDimension4 = context.barDimensions;\n    var isVertical = _context$barDimension4.isVertical;\n    var length = _context$barDimension4.length;\n    var width = _context$barDimension4.width;\n    var barWidth = _context$barDimension4.barWidth;\n    var barMargin = _context$barDimension4.barMargin;\n    var barOffset = _context$barDimension4.barOffset;\n    var X = _context$barDimension4.X;\n    var Y = _context$barDimension4.Y;\n    var ticksLength = _context$barDimension4.ticksLength;\n    var ticksPadding = _context$barDimension4.ticksPadding;\n\n    var range = options.maxValue - options.minValue;\n    var valuePerNonExactTick = range / (options.majorTicks.length - 1);\n    var tickValues = options.exactTicks ? options.majorTicks : options.majorTicks.map(function (tick, i) {\n        return options.minValue + valuePerNonExactTick * i;\n    });\n    var ticks = tickValues.length;\n    var hasLeft = options.numberSide !== 'right';\n    var hasRight = options.numberSide !== 'left';\n    var textHeight = options.fontNumbersSize * width / 200;\n    var i = 0;\n    var ticksWidth = (options.ticksWidth / 100 + ticksPadding * 2) * width;\n    var numLeft = (width - barWidth) / 2 - ticksWidth;\n    var numRight = (width - barWidth) / 2 + barWidth + ticksWidth;\n    var textX = void 0,\n        textY = void 0,\n        textWidth = void 0,\n        numberOffset = void 0,\n        tick = void 0;\n    var colors = options.colorNumbers instanceof Array ? options.colorNumbers : new Array(ticks).fill(options.colorNumbers);\n    var textMargin = options.numbersMargin / 100 * width;\n\n    context.font = drawings.font(options, 'Numbers', width / 200);\n    context.lineWidth = 0;\n    context.textAlign = 'center';\n\n    for (; i < ticks; i++) {\n        context.fillStyle = colors[i];\n        tick = options.majorTicks[i];\n        numberOffset = options.exactTicks ? ticksLength * ((tickValues[i] - options.minValue) / range) : i * ticksLength / (ticks - 1);\n\n        if (isVertical) {\n            textY = Y + length - barMargin - barOffset - numberOffset + textHeight / 3;\n\n            if (hasLeft) {\n                context.textAlign = 'right';\n                context.fillText(tick, X + numLeft - textMargin, textY);\n            }\n\n            if (hasRight) {\n                context.textAlign = 'left';\n                context.fillText(tick, X + numRight + textMargin, textY);\n            }\n        } else {\n            textWidth = context.measureText(tick).width;\n            textX = X + barMargin + barOffset + numberOffset;\n\n            if (hasLeft) {\n                context.fillText(tick, textX, Y + numLeft - textMargin);\n            }\n\n            if (hasRight) {\n                context.fillText(tick, textX, Y + numRight + textHeight + textMargin);\n            }\n        }\n    }\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge title\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearTitle(context, options) {\n    if (!options.title) return;\n\n    var _context$barDimension5 = context.barDimensions;\n    var isVertical = _context$barDimension5.isVertical;\n    var width = _context$barDimension5.width;\n    var length = _context$barDimension5.length;\n    var baseX = _context$barDimension5.baseX;\n    var baseY = _context$barDimension5.baseY;\n    var titleMargin = _context$barDimension5.titleMargin;\n\n    var textHeight = options.fontTitleSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + titleMargin / 2 - (isVertical ? textHeight : textHeight / 2) - 0.025 * (isVertical ? length : width));\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Title', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.title, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge units\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearUnits(context, options) {\n    if (!options.units) return;\n\n    var _context$barDimension6 = context.barDimensions;\n    var isVertical = _context$barDimension6.isVertical;\n    var width = _context$barDimension6.width;\n    var length = _context$barDimension6.length;\n    var baseX = _context$barDimension6.baseX;\n    var baseY = _context$barDimension6.baseY;\n    var unitsMargin = _context$barDimension6.unitsMargin;\n\n    var textHeight = options.fontUnitsSize * width / 200;\n    //noinspection JSUnresolvedFunction\n    var textX = round(baseX + (isVertical ? width : length) / 2);\n    //noinspection JSUnresolvedFunction\n    var textY = round(baseY + (isVertical ? length : width) + unitsMargin / 2 - textHeight / 2);\n\n    context.save();\n    context.textAlign = 'center';\n    context.fillStyle = options.colorTitle;\n    context.font = drawings.font(options, 'Units', width / 200);\n    context.lineWidth = 0;\n    context.fillText(options.units, textX, textY, isVertical ? width : length);\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws linear gauge needles\n *\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n */\nfunction drawLinearBarNeedle(context, options) {\n    if (!options.needle) return;\n\n    var _context$barDimension7 = context.barDimensions;\n    var isVertical = _context$barDimension7.isVertical;\n    var width = _context$barDimension7.width;\n    var length = _context$barDimension7.length;\n    var barWidth = _context$barDimension7.barWidth;\n    var barOffset = _context$barDimension7.barOffset;\n    var barMargin = _context$barDimension7.barMargin;\n    var ticksLength = _context$barDimension7.ticksLength;\n    var X = _context$barDimension7.X;\n    var Y = _context$barDimension7.Y;\n    var ticksPadding = _context$barDimension7.ticksPadding;\n\n    var hasLeft = options.needleSide !== 'right';\n    var hasRight = options.needleSide !== 'left';\n    var position = ticksLength * (drawings.normalizedValue(options).indented - options.minValue) / (options.maxValue - options.minValue);\n    var tickWidth = (options.ticksWidth / 100 + ticksPadding) * width;\n    var baseLength = barWidth / 2 + tickWidth;\n    var needleLength = baseLength * (options.needleEnd / 100);\n    var sX = void 0,\n        eX = void 0,\n        sY = void 0,\n        eY = void 0;\n    var draw = options.needleType.toLowerCase() === 'arrow' ? drawLinearArrowNeedle : drawLinearLineNeedle;\n    var barStart = (width - barWidth) / 2;\n    var needleStart = baseLength * (options.needleStart / 100);\n    var nLeft = barStart - tickWidth - needleStart;\n    var nRight = barStart + barWidth + tickWidth + needleStart;\n\n    context.save();\n\n    drawings.drawNeedleShadow(context, options);\n\n    if (isVertical) {\n        //noinspection JSUnresolvedFunction\n        sY = round(Y + length - barMargin - barOffset - position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nLeft);\n            eX = sX + needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sX = round(X + nRight);\n            eX = sX - needleLength;\n            draw(context, options, sX, sY, eX, sY, needleLength, true);\n        }\n    } else {\n        //noinspection JSUnresolvedFunction\n        sX = round(X + barMargin + barOffset + position);\n\n        if (hasLeft) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nLeft);\n            eY = sY + needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength);\n        }\n\n        if (hasRight) {\n            //noinspection JSUnresolvedFunction\n            sY = round(Y + nRight);\n            eY = sY - needleLength;\n            draw(context, options, sX, sY, sX, eY, needleLength, true);\n        }\n    }\n\n    context.restore();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Returns needle color style\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} length\n * @param {boolean} [isRight]\n * @return {CanvasGradient|string}\n */\nfunction needleStyle(context, options, length, isRight) {\n    return options.colorNeedleEnd ? drawings.linearGradient(context, isRight ? options.colorNeedleEnd : options.colorNeedle, isRight ? options.colorNeedle : options.colorNeedleEnd, length, !context.barDimensions.isVertical) : options.colorNeedle;\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws line needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearLineNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    context.lineWidth = options.needleWidth;\n    context.strokeStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n    context.moveTo(sX, sY);\n    context.lineTo(eX, eY);\n    context.stroke();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws arrow needle shape\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} sX\n * @param {number} sY\n * @param {number} eX\n * @param {number} eY\n * @param {number} length\n * @param {boolean} [isRight]\n */\nfunction drawLinearArrowNeedle(context, options, sX, sY, eX, eY, length, isRight) {\n    //noinspection JSUnresolvedFunction\n    var peakLength = round(length * 0.4);\n    var bodyLength = length - peakLength;\n    var isVertical = sX === eX;\n    var halfWidth = options.needleWidth / 2;\n\n    context.fillStyle = needleStyle(context, options, length, isRight);\n\n    context.beginPath();\n\n    if (isVertical) {\n        if (sY > eY) bodyLength *= -1;\n\n        context.moveTo(sX - halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY);\n        context.lineTo(sX + halfWidth, sY + bodyLength);\n        context.lineTo(sX, eY);\n        context.lineTo(sX - halfWidth, sY + bodyLength);\n        context.lineTo(sX - halfWidth, sY);\n    } else {\n        if (sX > eX) bodyLength *= -1;\n\n        context.moveTo(sX, sY - halfWidth);\n        context.lineTo(sX, sY + halfWidth);\n        context.lineTo(sX + bodyLength, sY + halfWidth);\n        context.lineTo(eX, sY);\n        context.lineTo(sX + bodyLength, sY - halfWidth);\n        context.lineTo(sX, sY - halfWidth);\n    }\n\n    context.fill();\n    context.closePath();\n}\n\n/* istanbul ignore next: private, not testable */\n/**\n * Draws value box for linear gauge\n *\n * @access private\n * @param {Canvas2DContext} context\n * @param {LinearGaugeOptions} options\n * @param {number} value\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n */\nfunction drawLinearValueBox(context, options, value, x, y, w, h) {\n    // currently value box is available only for vertical linear gauge,\n    // as far as by design it is hard to find a proper place for\n    // horizontal ones\n    var boxWidth = (parseFloat(options.fontValueSize) || 0) * w / 200;\n    var dy = (0.11 * h - boxWidth) / 2;\n\n    context.barDimensions.isVertical && drawings.drawValueBox(context, options, value, x + w / 2, y + h - boxWidth - dy, w);\n}\n\n/**\n * Minimalistic HTML5 Canvas Linear Gauge\n */\n\nvar LinearGauge = function (_BaseGauge2) {\n    _inherits(LinearGauge, _BaseGauge2);\n\n    /**\n     * Fired each time before gauge plate is drawn\n     *\n     * @event LinearGauge#beforePlate\n     */\n\n    /**\n     * Fired each time before gauge highlight areas are drawn\n     *\n     * @event LinearGauge#beforeHighlights\n     */\n\n    /**\n     * Fired each time before gauge minor ticks are drawn\n     *\n     * @event LinearGauge#beforeMinorTicks\n     */\n\n    /**\n     * Fired each time before gauge major ticks are drawn\n     *\n     * @event LinearGauge#beforeMajorTicks\n     */\n\n    /**\n     * Fired each time before gauge tick numbers are drawn\n     *\n     * @event LinearGauge#beforeNumbers\n     */\n\n    /**\n     * Fired each time before gauge title is drawn\n     *\n     * @event LinearGauge#beforeTitle\n     */\n\n    /**\n     * Fired each time before gauge units text is drawn\n     *\n     * @event LinearGauge#beforeUnits\n     */\n\n    /**\n     * Fired each time before gauge bar area is drawn\n     *\n     * @event LinearGauge#beforeBar\n     */\n\n    /**\n     * Fired each time before gauge progress bar is drawn\n     *\n     * @event LinearGauge#beforeProgressBar\n     */\n\n    /**\n     * Fired each time before gauge value box is drawn\n     *\n     * @event LinearGauge#beforeValueBox\n     */\n\n    /**\n     * Fired each time before gauge needle is drawn\n     *\n     * @event LinearGauge#beforeNeedle\n     */\n\n    /**\n     * @constructor\n     * @param {LinearGaugeOptions} options\n     */\n    function LinearGauge(options) {\n        _classCallCheck(this, LinearGauge);\n\n        options = Object.assign({}, defaultLinearGaugeOptions, options || {});\n        return _possibleConstructorReturn(this, (LinearGauge.__proto__ || Object.getPrototypeOf(LinearGauge)).call(this, LinearGauge.configure(options)));\n    }\n\n    /**\n     * Checks and updates gauge options properly\n     *\n     * @param {*} options\n     * @return {*}\n     * @access protected\n     */\n\n\n    _createClass(LinearGauge, [{\n        key: 'draw',\n\n\n        /* istanbul ignore next */\n        /**\n         * Triggering linear gauge render on a canvas.\n         *\n         * @returns {LinearGauge}\n         */\n        value: function draw() {\n            try {\n                var canvas = this.canvas;\n                var _ref2 = [-canvas.drawX, -canvas.drawY, canvas.drawWidth, canvas.drawHeight];\n                var x = _ref2[0];\n                var y = _ref2[1];\n                var w = _ref2[2];\n                var h = _ref2[3];\n\n                var options = this.options;\n\n                if (!canvas.elementClone.initialized) {\n                    var context = canvas.contextClone;\n\n                    // clear the cache\n                    context.clearRect(x, y, w, h);\n                    context.save();\n\n                    this.emit('beforePlate');\n                    this.drawBox = drawLinearPlate(context, options, x, y, w, h);\n\n                    this.emit('beforeBar');\n                    drawLinearBar.apply(undefined, [context, options].concat(_toConsumableArray(this.drawBox)));\n\n                    canvas.context.barDimensions = context.barDimensions;\n\n                    this.emit('beforeHighlights');\n                    drawLinearBarHighlights(context, options);\n                    this.emit('beforeMinorTicks');\n                    drawLinearMinorTicks(context, options);\n                    this.emit('beforeMajorTicks');\n                    drawLinearMajorTicks(context, options);\n                    this.emit('beforeNumbers');\n                    drawLinearMajorTicksNumbers(context, options);\n                    this.emit('beforeTitle');\n                    drawLinearTitle(context, options);\n                    this.emit('beforeUnits');\n                    drawLinearUnits(context, options);\n\n                    canvas.elementClone.initialized = true;\n                }\n\n                this.canvas.commit();\n\n                // clear the canvas\n                canvas.context.clearRect(x, y, w, h);\n                canvas.context.save();\n\n                canvas.context.drawImage(canvas.elementClone, x, y, w, h);\n                canvas.context.save();\n\n                this.emit('beforeProgressBar');\n                drawLinearBarProgress.apply(undefined, [canvas.context, options].concat(_toConsumableArray(this.drawBox)));\n                this.emit('beforeNeedle');\n                drawLinearBarNeedle(canvas.context, options);\n                this.emit('beforeValueBox');\n                drawLinearValueBox.apply(undefined, [canvas.context, options, options.animatedValue ? this.options.value : this.value].concat(_toConsumableArray(this.drawBox)));\n\n                _get(LinearGauge.prototype.__proto__ || Object.getPrototypeOf(LinearGauge.prototype), 'draw', this).call(this);\n            } catch (err) {\n                drawings.verifyError(err);\n            }\n\n            return this;\n        }\n    }], [{\n        key: 'configure',\n        value: function configure(options) {\n            /* istanbul ignore else */\n            if (options.barStrokeWidth >= options.barWidth) {\n                //noinspection JSUnresolvedFunction\n                options.barStrokeWidth = round(options.barWidth / 2);\n            }\n\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasLeft = hasTicksBar('right', options);\n            //noinspection JSUndefinedPropertyAssignment\n            options.hasRight = hasTicksBar('left', options);\n\n            if (options.value > options.maxValue) {\n                options.value = options.maxValue;\n            }\n\n            if (options.value < options.minValue) {\n                options.value = options.minValue;\n            }\n\n            return BaseGauge.configure(options);\n        }\n    }]);\n\n    return LinearGauge;\n}(BaseGauge);\n\n/**\n * @ignore\n * @typedef {object} ns\n */\n/* istanbul ignore if */\n\n\nif (typeof ns !== 'undefined') {\n    ns['LinearGauge'] = LinearGauge;\n}\n\nBaseGauge.initialize('LinearGauge', defaultLinearGaugeOptions);;typeof module !== \"undefined\" && Object.assign(ns, {Collection: Collection,GenericOptions: GenericOptions,Animation: Animation,BaseGauge: BaseGauge,drawings: drawings,SmartCanvas: SmartCanvas,vendorize: vendorize});}(typeof module !== \"undefined\" ? module.exports : window));"],"sourceRoot":"/source/"}